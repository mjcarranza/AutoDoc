{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\n\nconst fs = require(\"fs\");\n\nconst gaxios_1 = require(\"gaxios\");\n\nconst jws = require(\"jws\");\n\nconst path = require(\"path\");\n\nconst util_1 = require(\"util\");\n\nconst readFile = fs.readFile ? (0, util_1.promisify)(fs.readFile) : /*#__PURE__*/_asyncToGenerator(function* () {\n  // if running in the web-browser, fs.readFile may not have been shimmed.\n  throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n});\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n\n}\n\nclass GoogleToken {\n  get accessToken() {\n    return this.rawToken ? this.rawToken.access_token : undefined;\n  }\n\n  get idToken() {\n    return this.rawToken ? this.rawToken.id_token : undefined;\n  }\n\n  get tokenType() {\n    return this.rawToken ? this.rawToken.token_type : undefined;\n  }\n\n  get refreshToken() {\n    return this.rawToken ? this.rawToken.refresh_token : undefined;\n  }\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n\n\n  constructor(options) {\n    this.transporter = {\n      request: opts => (0, gaxios_1.request)(opts)\n    };\n    this.configure(options);\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n\n\n  hasExpired() {\n    const now = new Date().getTime();\n\n    if (this.rawToken && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Returns whether the token will expire within eagerRefreshThresholdMillis\n   *\n   * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n   */\n\n\n  isTokenExpiring() {\n    var _a;\n\n    const now = new Date().getTime();\n    const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n\n    if (this.rawToken && this.expiresAt) {\n      return this.expiresAt <= now + eagerRefreshThresholdMillis;\n    } else {\n      return true;\n    }\n  }\n\n  getToken(callback, opts = {}) {\n    if (typeof callback === 'object') {\n      opts = callback;\n      callback = undefined;\n    }\n\n    opts = Object.assign({\n      forceRefresh: false\n    }, opts);\n\n    if (callback) {\n      const cb = callback;\n      this.getTokenAsync(opts).then(t => cb(null, t), callback);\n      return;\n    }\n\n    return this.getTokenAsync(opts);\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n\n\n  getCredentials(keyFile) {\n    return _asyncToGenerator(function* () {\n      const ext = path.extname(keyFile);\n\n      switch (ext) {\n        case '.json':\n          {\n            const key = yield readFile(keyFile, 'utf8');\n            const body = JSON.parse(key);\n            const privateKey = body.private_key;\n            const clientEmail = body.client_email;\n\n            if (!privateKey || !clientEmail) {\n              throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n            }\n\n            return {\n              privateKey,\n              clientEmail\n            };\n          }\n\n        case '.der':\n        case '.crt':\n        case '.pem':\n          {\n            const privateKey = yield readFile(keyFile, 'utf8');\n            return {\n              privateKey\n            };\n          }\n\n        case '.p12':\n        case '.pfx':\n          {\n            throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' + 'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n          }\n\n        default:\n          throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n      }\n    })();\n  }\n\n  getTokenAsync(opts) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.inFlightRequest && !opts.forceRefresh) {\n        return _this.inFlightRequest;\n      }\n\n      try {\n        return yield _this.inFlightRequest = _this.getTokenAsyncInner(opts);\n      } finally {\n        _this.inFlightRequest = undefined;\n      }\n    })();\n  }\n\n  getTokenAsyncInner(opts) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.isTokenExpiring() === false && opts.forceRefresh === false) {\n        return Promise.resolve(_this2.rawToken);\n      }\n\n      if (!_this2.key && !_this2.keyFile) {\n        throw new Error('No key or keyFile set.');\n      }\n\n      if (!_this2.key && _this2.keyFile) {\n        const creds = yield _this2.getCredentials(_this2.keyFile);\n        _this2.key = creds.privateKey;\n        _this2.iss = creds.clientEmail || _this2.iss;\n\n        if (!creds.clientEmail) {\n          _this2.ensureEmail();\n        }\n      }\n\n      return _this2.requestToken();\n    })();\n  }\n\n  ensureEmail() {\n    if (!this.iss) {\n      throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n  }\n\n  revokeToken(callback) {\n    if (callback) {\n      this.revokeTokenAsync().then(() => callback(), callback);\n      return;\n    }\n\n    return this.revokeTokenAsync();\n  }\n\n  revokeTokenAsync() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this3.accessToken) {\n        throw new Error('No token to revoke.');\n      }\n\n      const url = GOOGLE_REVOKE_TOKEN_URL + _this3.accessToken;\n      yield _this3.transporter.request({\n        url\n      });\n\n      _this3.configure({\n        email: _this3.iss,\n        sub: _this3.sub,\n        key: _this3.key,\n        keyFile: _this3.keyFile,\n        scope: _this3.scope,\n        additionalClaims: _this3.additionalClaims\n      });\n    })();\n  }\n  /**\n   * Configure the GoogleToken for re-use.\n   * @param  {object} options Configuration object.\n   */\n\n\n  configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.rawToken = undefined;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n\n    if (typeof options.scope === 'object') {\n      this.scope = options.scope.join(' ');\n    } else {\n      this.scope = options.scope;\n    }\n\n    this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n\n    if (options.transporter) {\n      this.transporter = options.transporter;\n    }\n  }\n  /**\n   * Request the token from Google.\n   */\n\n\n  requestToken() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const iat = Math.floor(new Date().getTime() / 1000);\n      const additionalClaims = _this4.additionalClaims || {};\n      const payload = Object.assign({\n        iss: _this4.iss,\n        scope: _this4.scope,\n        aud: GOOGLE_TOKEN_URL,\n        exp: iat + 3600,\n        iat,\n        sub: _this4.sub\n      }, additionalClaims);\n      const signedJWT = jws.sign({\n        header: {\n          alg: 'RS256'\n        },\n        payload,\n        secret: _this4.key\n      });\n\n      try {\n        const r = yield _this4.transporter.request({\n          method: 'POST',\n          url: GOOGLE_TOKEN_URL,\n          data: {\n            grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n            assertion: signedJWT\n          },\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          responseType: 'json'\n        });\n        _this4.rawToken = r.data;\n        _this4.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n        return _this4.rawToken;\n      } catch (e) {\n        _this4.rawToken = undefined;\n        _this4.tokenExpires = undefined;\n        const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data) ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data : {};\n\n        if (body.error) {\n          const desc = body.error_description ? `: ${body.error_description}` : '';\n          e.message = `${body.error}${desc}`;\n        }\n\n        throw e;\n      }\n    })();\n  }\n\n}\n\nexports.GoogleToken = GoogleToken;","map":{"version":3,"names":["Object","defineProperty","exports","value","GoogleToken","fs","require","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","Error","constructor","message","code","accessToken","rawToken","access_token","undefined","idToken","id_token","tokenType","token_type","refreshToken","refresh_token","options","transporter","request","opts","configure","hasExpired","now","Date","getTime","expiresAt","isTokenExpiring","_a","eagerRefreshThresholdMillis","getToken","callback","assign","forceRefresh","cb","getTokenAsync","then","t","getCredentials","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","inFlightRequest","getTokenAsyncInner","Promise","resolve","creds","iss","ensureEmail","requestToken","revokeToken","revokeTokenAsync","url","email","sub","scope","additionalClaims","join","_b","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","r","method","data","grant_type","assertion","headers","responseType","expires_in","e","tokenExpires","response","error","desc","error_description"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/gtoken/build/src/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? (0, util_1.promisify)(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nclass GoogleToken {\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.transporter = {\n            request: opts => (0, gaxios_1.request)(opts),\n        };\n        this.configure(options);\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' +\n                    'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await this.transporter.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n        if (options.transporter) {\n            this.transporter = options.transporter;\n        }\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        var _a, _b;\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await this.transporter.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data)\n                ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data\n                : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAMK,QAAQ,GAAGN,EAAE,CAACM,QAAH,GACX,CAAC,GAAGD,MAAM,CAACE,SAAX,EAAsBP,EAAE,CAACM,QAAzB,CADW,kCAEX,aAAY;EACV;EACA,MAAM,IAAIE,aAAJ,CAAkB,8BAAlB,EAAkD,qBAAlD,CAAN;AACH,CALY,CAAjB;AAMA,MAAMC,gBAAgB,GAAG,4CAAzB;AACA,MAAMC,uBAAuB,GAAG,oDAAhC;;AACA,MAAMF,aAAN,SAA4BG,KAA5B,CAAkC;EAC9BC,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;IACvB,MAAMD,OAAN;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACH;;AAJ6B;;AAMlC,MAAMf,WAAN,CAAkB;EACC,IAAXgB,WAAW,GAAG;IACd,OAAO,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,YAA9B,GAA6CC,SAApD;EACH;;EACU,IAAPC,OAAO,GAAG;IACV,OAAO,KAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcI,QAA9B,GAAyCF,SAAhD;EACH;;EACY,IAATG,SAAS,GAAG;IACZ,OAAO,KAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcM,UAA9B,GAA2CJ,SAAlD;EACH;;EACe,IAAZK,YAAY,GAAG;IACf,OAAO,KAAKP,QAAL,GAAgB,KAAKA,QAAL,CAAcQ,aAA9B,GAA8CN,SAArD;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIN,WAAW,CAACa,OAAD,EAAU;IACjB,KAAKC,WAAL,GAAmB;MACfC,OAAO,EAAEC,IAAI,IAAI,CAAC,GAAG1B,QAAQ,CAACyB,OAAb,EAAsBC,IAAtB;IADF,CAAnB;IAGA,KAAKC,SAAL,CAAeJ,OAAf;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIK,UAAU,GAAG;IACT,MAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;IACA,IAAI,KAAKjB,QAAL,IAAiB,KAAKkB,SAA1B,EAAqC;MACjC,OAAOH,GAAG,IAAI,KAAKG,SAAnB;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIC,eAAe,GAAG;IACd,IAAIC,EAAJ;;IACA,MAAML,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;IACA,MAAMI,2BAA2B,GAAG,CAACD,EAAE,GAAG,KAAKC,2BAAX,MAA4C,IAA5C,IAAoDD,EAAE,KAAK,KAAK,CAAhE,GAAoEA,EAApE,GAAyE,CAA7G;;IACA,IAAI,KAAKpB,QAAL,IAAiB,KAAKkB,SAA1B,EAAqC;MACjC,OAAO,KAAKA,SAAL,IAAkBH,GAAG,GAAGM,2BAA/B;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;EACDC,QAAQ,CAACC,QAAD,EAAWX,IAAI,GAAG,EAAlB,EAAsB;IAC1B,IAAI,OAAOW,QAAP,KAAoB,QAAxB,EAAkC;MAC9BX,IAAI,GAAGW,QAAP;MACAA,QAAQ,GAAGrB,SAAX;IACH;;IACDU,IAAI,GAAGjC,MAAM,CAAC6C,MAAP,CAAc;MACjBC,YAAY,EAAE;IADG,CAAd,EAEJb,IAFI,CAAP;;IAGA,IAAIW,QAAJ,EAAc;MACV,MAAMG,EAAE,GAAGH,QAAX;MACA,KAAKI,aAAL,CAAmBf,IAAnB,EAAyBgB,IAAzB,CAA8BC,CAAC,IAAIH,EAAE,CAAC,IAAD,EAAOG,CAAP,CAArC,EAAgDN,QAAhD;MACA;IACH;;IACD,OAAO,KAAKI,aAAL,CAAmBf,IAAnB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACUkB,cAAc,CAACC,OAAD,EAAU;IAAA;MAC1B,MAAMC,GAAG,GAAG5C,IAAI,CAAC6C,OAAL,CAAaF,OAAb,CAAZ;;MACA,QAAQC,GAAR;QACI,KAAK,OAAL;UAAc;YACV,MAAME,GAAG,SAAS5C,QAAQ,CAACyC,OAAD,EAAU,MAAV,CAA1B;YACA,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAb;YACA,MAAMI,UAAU,GAAGH,IAAI,CAACI,WAAxB;YACA,MAAMC,WAAW,GAAGL,IAAI,CAACM,YAAzB;;YACA,IAAI,CAACH,UAAD,IAAe,CAACE,WAApB,EAAiC;cAC7B,MAAM,IAAIhD,aAAJ,CAAkB,4CAAlB,EAAgE,qBAAhE,CAAN;YACH;;YACD,OAAO;cAAE8C,UAAF;cAAcE;YAAd,CAAP;UACH;;QACD,KAAK,MAAL;QACA,KAAK,MAAL;QACA,KAAK,MAAL;UAAa;YACT,MAAMF,UAAU,SAAShD,QAAQ,CAACyC,OAAD,EAAU,MAAV,CAAjC;YACA,OAAO;cAAEO;YAAF,CAAP;UACH;;QACD,KAAK,MAAL;QACA,KAAK,MAAL;UAAa;YACT,MAAM,IAAI9C,aAAJ,CAAkB,wDACpB,sFADE,EACsF,0BADtF,CAAN;UAEH;;QACD;UACI,MAAM,IAAIA,aAAJ,CAAkB,2EACpB,qDADE,EACqD,0BADrD,CAAN;MAvBR;IAF0B;EA4B7B;;EACKmC,aAAa,CAACf,IAAD,EAAO;IAAA;;IAAA;MACtB,IAAI,KAAI,CAAC8B,eAAL,IAAwB,CAAC9B,IAAI,CAACa,YAAlC,EAAgD;QAC5C,OAAO,KAAI,CAACiB,eAAZ;MACH;;MACD,IAAI;QACA,aAAc,KAAI,CAACA,eAAL,GAAuB,KAAI,CAACC,kBAAL,CAAwB/B,IAAxB,CAArC;MACH,CAFD,SAGQ;QACJ,KAAI,CAAC8B,eAAL,GAAuBxC,SAAvB;MACH;IATqB;EAUzB;;EACKyC,kBAAkB,CAAC/B,IAAD,EAAO;IAAA;;IAAA;MAC3B,IAAI,MAAI,CAACO,eAAL,OAA2B,KAA3B,IAAoCP,IAAI,CAACa,YAAL,KAAsB,KAA9D,EAAqE;QACjE,OAAOmB,OAAO,CAACC,OAAR,CAAgB,MAAI,CAAC7C,QAArB,CAAP;MACH;;MACD,IAAI,CAAC,MAAI,CAACkC,GAAN,IAAa,CAAC,MAAI,CAACH,OAAvB,EAAgC;QAC5B,MAAM,IAAIpC,KAAJ,CAAU,wBAAV,CAAN;MACH;;MACD,IAAI,CAAC,MAAI,CAACuC,GAAN,IAAa,MAAI,CAACH,OAAtB,EAA+B;QAC3B,MAAMe,KAAK,SAAS,MAAI,CAAChB,cAAL,CAAoB,MAAI,CAACC,OAAzB,CAApB;QACA,MAAI,CAACG,GAAL,GAAWY,KAAK,CAACR,UAAjB;QACA,MAAI,CAACS,GAAL,GAAWD,KAAK,CAACN,WAAN,IAAqB,MAAI,CAACO,GAArC;;QACA,IAAI,CAACD,KAAK,CAACN,WAAX,EAAwB;UACpB,MAAI,CAACQ,WAAL;QACH;MACJ;;MACD,OAAO,MAAI,CAACC,YAAL,EAAP;IAf2B;EAgB9B;;EACDD,WAAW,GAAG;IACV,IAAI,CAAC,KAAKD,GAAV,EAAe;MACX,MAAM,IAAIvD,aAAJ,CAAkB,oBAAlB,EAAwC,qBAAxC,CAAN;IACH;EACJ;;EACD0D,WAAW,CAAC3B,QAAD,EAAW;IAClB,IAAIA,QAAJ,EAAc;MACV,KAAK4B,gBAAL,GAAwBvB,IAAxB,CAA6B,MAAML,QAAQ,EAA3C,EAA+CA,QAA/C;MACA;IACH;;IACD,OAAO,KAAK4B,gBAAL,EAAP;EACH;;EACKA,gBAAgB,GAAG;IAAA;;IAAA;MACrB,IAAI,CAAC,MAAI,CAACpD,WAAV,EAAuB;QACnB,MAAM,IAAIJ,KAAJ,CAAU,qBAAV,CAAN;MACH;;MACD,MAAMyD,GAAG,GAAG1D,uBAAuB,GAAG,MAAI,CAACK,WAA3C;MACA,MAAM,MAAI,CAACW,WAAL,CAAiBC,OAAjB,CAAyB;QAAEyC;MAAF,CAAzB,CAAN;;MACA,MAAI,CAACvC,SAAL,CAAe;QACXwC,KAAK,EAAE,MAAI,CAACN,GADD;QAEXO,GAAG,EAAE,MAAI,CAACA,GAFC;QAGXpB,GAAG,EAAE,MAAI,CAACA,GAHC;QAIXH,OAAO,EAAE,MAAI,CAACA,OAJH;QAKXwB,KAAK,EAAE,MAAI,CAACA,KALD;QAMXC,gBAAgB,EAAE,MAAI,CAACA;MANZ,CAAf;IANqB;EAcxB;EACD;AACJ;AACA;AACA;;;EACI3C,SAAS,CAACJ,OAAO,GAAG,EAAX,EAAe;IACpB,KAAKsB,OAAL,GAAetB,OAAO,CAACsB,OAAvB;IACA,KAAKG,GAAL,GAAWzB,OAAO,CAACyB,GAAnB;IACA,KAAKlC,QAAL,GAAgBE,SAAhB;IACA,KAAK6C,GAAL,GAAWtC,OAAO,CAAC4C,KAAR,IAAiB5C,OAAO,CAACsC,GAApC;IACA,KAAKO,GAAL,GAAW7C,OAAO,CAAC6C,GAAnB;IACA,KAAKE,gBAAL,GAAwB/C,OAAO,CAAC+C,gBAAhC;;IACA,IAAI,OAAO/C,OAAO,CAAC8C,KAAf,KAAyB,QAA7B,EAAuC;MACnC,KAAKA,KAAL,GAAa9C,OAAO,CAAC8C,KAAR,CAAcE,IAAd,CAAmB,GAAnB,CAAb;IACH,CAFD,MAGK;MACD,KAAKF,KAAL,GAAa9C,OAAO,CAAC8C,KAArB;IACH;;IACD,KAAKlC,2BAAL,GAAmCZ,OAAO,CAACY,2BAA3C;;IACA,IAAIZ,OAAO,CAACC,WAAZ,EAAyB;MACrB,KAAKA,WAAL,GAAmBD,OAAO,CAACC,WAA3B;IACH;EACJ;EACD;AACJ;AACA;;;EACUuC,YAAY,GAAG;IAAA;;IAAA;MACjB,IAAI7B,EAAJ,EAAQsC,EAAR;;MACA,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAI7C,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAZ;MACA,MAAMuC,gBAAgB,GAAG,MAAI,CAACA,gBAAL,IAAyB,EAAlD;MACA,MAAMM,OAAO,GAAGnF,MAAM,CAAC6C,MAAP,CAAc;QAC1BuB,GAAG,EAAE,MAAI,CAACA,GADgB;QAE1BQ,KAAK,EAAE,MAAI,CAACA,KAFc;QAG1BQ,GAAG,EAAEtE,gBAHqB;QAI1BuE,GAAG,EAAEL,GAAG,GAAG,IAJe;QAK1BA,GAL0B;QAM1BL,GAAG,EAAE,MAAI,CAACA;MANgB,CAAd,EAObE,gBAPa,CAAhB;MAQA,MAAMS,SAAS,GAAG9E,GAAG,CAAC+E,IAAJ,CAAS;QACvBC,MAAM,EAAE;UAAEC,GAAG,EAAE;QAAP,CADe;QAEvBN,OAFuB;QAGvBO,MAAM,EAAE,MAAI,CAACnC;MAHU,CAAT,CAAlB;;MAKA,IAAI;QACA,MAAMoC,CAAC,SAAS,MAAI,CAAC5D,WAAL,CAAiBC,OAAjB,CAAyB;UACrC4D,MAAM,EAAE,MAD6B;UAErCnB,GAAG,EAAE3D,gBAFgC;UAGrC+E,IAAI,EAAE;YACFC,UAAU,EAAE,6CADV;YAEFC,SAAS,EAAET;UAFT,CAH+B;UAOrCU,OAAO,EAAE;YAAE,gBAAgB;UAAlB,CAP4B;UAQrCC,YAAY,EAAE;QARuB,CAAzB,CAAhB;QAUA,MAAI,CAAC5E,QAAL,GAAgBsE,CAAC,CAACE,IAAlB;QACA,MAAI,CAACtD,SAAL,GACIoD,CAAC,CAACE,IAAF,CAAOK,UAAP,KAAsB,IAAtB,IAA8BP,CAAC,CAACE,IAAF,CAAOK,UAAP,KAAsB3E,SAApD,GACMA,SADN,GAEM,CAACyD,GAAG,GAAGW,CAAC,CAACE,IAAF,CAAOK,UAAd,IAA4B,IAHtC;QAIA,OAAO,MAAI,CAAC7E,QAAZ;MACH,CAjBD,CAkBA,OAAO8E,CAAP,EAAU;QACN,MAAI,CAAC9E,QAAL,GAAgBE,SAAhB;QACA,MAAI,CAAC6E,YAAL,GAAoB7E,SAApB;QACA,MAAMiC,IAAI,GAAG2C,CAAC,CAACE,QAAF,KAAe,CAAC5D,EAAE,GAAG0D,CAAC,CAACE,QAAR,MAAsB,IAAtB,IAA8B5D,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACoD,IAAzE,IACP,CAACd,EAAE,GAAGoB,CAAC,CAACE,QAAR,MAAsB,IAAtB,IAA8BtB,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACc,IADnD,GAEP,EAFN;;QAGA,IAAIrC,IAAI,CAAC8C,KAAT,EAAgB;UACZ,MAAMC,IAAI,GAAG/C,IAAI,CAACgD,iBAAL,GACN,KAAIhD,IAAI,CAACgD,iBAAkB,EADrB,GAEP,EAFN;UAGAL,CAAC,CAACjF,OAAF,GAAa,GAAEsC,IAAI,CAAC8C,KAAM,GAAEC,IAAK,EAAjC;QACH;;QACD,MAAMJ,CAAN;MACH;IAhDgB;EAiDpB;;AAxOa;;AA0OlBjG,OAAO,CAACE,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}