{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NormalApiCaller = void 0;\n\nconst call_1 = require(\"../call\");\n/**\n * Creates an API caller for regular unary methods.\n */\n\n\nclass NormalApiCaller {\n  init(callback) {\n    if (callback) {\n      return new call_1.OngoingCall(callback);\n    }\n\n    return new call_1.OngoingCallPromise();\n  }\n\n  wrap(func) {\n    return func;\n  }\n\n  call(apiCall, argument, settings, canceller) {\n    canceller.call(apiCall, argument);\n  }\n\n  fail(canceller, err) {\n    canceller.callback(err);\n  }\n\n  result(canceller) {\n    return canceller.promise;\n  }\n\n}\n\nexports.NormalApiCaller = NormalApiCaller;","map":{"version":3,"names":["Object","defineProperty","exports","value","NormalApiCaller","call_1","require","init","callback","OngoingCall","OngoingCallPromise","wrap","func","call","apiCall","argument","settings","canceller","fail","err","result","promise"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/normalCalls/normalApiCaller.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NormalApiCaller = void 0;\nconst call_1 = require(\"../call\");\n/**\n * Creates an API caller for regular unary methods.\n */\nclass NormalApiCaller {\n    init(callback) {\n        if (callback) {\n            return new call_1.OngoingCall(callback);\n        }\n        return new call_1.OngoingCallPromise();\n    }\n    wrap(func) {\n        return func;\n    }\n    call(apiCall, argument, settings, canceller) {\n        canceller.call(apiCall, argument);\n    }\n    fail(canceller, err) {\n        canceller.callback(err);\n    }\n    result(canceller) {\n        return canceller.promise;\n    }\n}\nexports.NormalApiCaller = NormalApiCaller;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;AACA;AACA;AACA;;;AACA,MAAMF,eAAN,CAAsB;EAClBG,IAAI,CAACC,QAAD,EAAW;IACX,IAAIA,QAAJ,EAAc;MACV,OAAO,IAAIH,MAAM,CAACI,WAAX,CAAuBD,QAAvB,CAAP;IACH;;IACD,OAAO,IAAIH,MAAM,CAACK,kBAAX,EAAP;EACH;;EACDC,IAAI,CAACC,IAAD,EAAO;IACP,OAAOA,IAAP;EACH;;EACDC,IAAI,CAACC,OAAD,EAAUC,QAAV,EAAoBC,QAApB,EAA8BC,SAA9B,EAAyC;IACzCA,SAAS,CAACJ,IAAV,CAAeC,OAAf,EAAwBC,QAAxB;EACH;;EACDG,IAAI,CAACD,SAAD,EAAYE,GAAZ,EAAiB;IACjBF,SAAS,CAACT,QAAV,CAAmBW,GAAnB;EACH;;EACDC,MAAM,CAACH,SAAD,EAAY;IACd,OAAOA,SAAS,CAACI,OAAjB;EACH;;AAlBiB;;AAoBtBnB,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}