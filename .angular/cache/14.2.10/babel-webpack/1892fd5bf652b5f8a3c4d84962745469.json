{"ast":null,"code":"\"use strict\"; // Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserRefreshClient = exports.USER_REFRESH_ACCOUNT_TYPE = void 0;\n\nconst oauth2client_1 = require(\"./oauth2client\");\n\nexports.USER_REFRESH_ACCOUNT_TYPE = 'authorized_user';\n\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n  constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n    const opts = optionsOrClientId && typeof optionsOrClientId === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret,\n      refreshToken,\n      eagerRefreshThresholdMillis,\n      forceRefreshOnFailure\n    };\n    super(opts);\n    this._refreshToken = opts.refreshToken;\n    this.credentials.refresh_token = opts.refreshToken;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken An ignored refreshToken..\n   * @param callback Optional callback.\n   */\n\n\n  refreshTokenNoCache( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  refreshToken) {\n    var _superprop_getRefreshTokenNoCache = () => super.refreshTokenNoCache,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _superprop_getRefreshTokenNoCache().call(_this, _this._refreshToken);\n    })();\n  }\n  /**\n   * Create a UserRefreshClient credentials instance using the given input\n   * options.\n   * @param json The input object.\n   */\n\n\n  fromJSON(json) {\n    if (!json) {\n      throw new Error('Must pass in a JSON object containing the user refresh token');\n    }\n\n    if (json.type !== 'authorized_user') {\n      throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n    }\n\n    if (!json.client_id) {\n      throw new Error('The incoming JSON object does not contain a client_id field');\n    }\n\n    if (!json.client_secret) {\n      throw new Error('The incoming JSON object does not contain a client_secret field');\n    }\n\n    if (!json.refresh_token) {\n      throw new Error('The incoming JSON object does not contain a refresh_token field');\n    }\n\n    this._clientId = json.client_id;\n    this._clientSecret = json.client_secret;\n    this._refreshToken = json.refresh_token;\n    this.credentials.refresh_token = json.refresh_token;\n    this.quotaProjectId = json.quota_project_id;\n  }\n\n  fromStream(inputStream, callback) {\n    if (callback) {\n      this.fromStreamAsync(inputStream).then(() => callback(), callback);\n    } else {\n      return this.fromStreamAsync(inputStream);\n    }\n  }\n\n  fromStreamAsync(inputStream) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        if (!inputStream) {\n          return reject(new Error('Must pass in a stream containing the user refresh token.'));\n        }\n\n        let s = '';\n        inputStream.setEncoding('utf8').on('error', reject).on('data', chunk => s += chunk).on('end', () => {\n          try {\n            const data = JSON.parse(s);\n\n            _this2.fromJSON(data);\n\n            return resolve();\n          } catch (err) {\n            return reject(err);\n          }\n        });\n      });\n    })();\n  }\n\n}\n\nexports.UserRefreshClient = UserRefreshClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","UserRefreshClient","USER_REFRESH_ACCOUNT_TYPE","oauth2client_1","require","OAuth2Client","constructor","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","forceRefreshOnFailure","opts","clientId","_refreshToken","credentials","refresh_token","refreshTokenNoCache","fromJSON","json","Error","type","client_id","client_secret","_clientId","_clientSecret","quotaProjectId","quota_project_id","fromStream","inputStream","callback","fromStreamAsync","then","Promise","resolve","reject","s","setEncoding","on","chunk","data","JSON","parse","err"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-auth-library/build/src/auth/refreshclient.js"],"sourcesContent":["\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRefreshClient = exports.USER_REFRESH_ACCOUNT_TYPE = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nexports.USER_REFRESH_ACCOUNT_TYPE = 'authorized_user';\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n                forceRefreshOnFailure,\n            };\n        super(opts);\n        this._refreshToken = opts.refreshToken;\n        this.credentials.refresh_token = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4BF,OAAO,CAACG,yBAAR,GAAoC,KAAK,CAArE;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA9B;;AACAL,OAAO,CAACG,yBAAR,GAAoC,iBAApC;;AACA,MAAMD,iBAAN,SAAgCE,cAAc,CAACE,YAA/C,CAA4D;EACxDC,WAAW,CAACC,iBAAD,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,2BAAhD,EAA6EC,qBAA7E,EAAoG;IAC3G,MAAMC,IAAI,GAAGL,iBAAiB,IAAI,OAAOA,iBAAP,KAA6B,QAAlD,GACPA,iBADO,GAEP;MACEM,QAAQ,EAAEN,iBADZ;MAEEC,YAFF;MAGEC,YAHF;MAIEC,2BAJF;MAKEC;IALF,CAFN;IASA,MAAMC,IAAN;IACA,KAAKE,aAAL,GAAqBF,IAAI,CAACH,YAA1B;IACA,KAAKM,WAAL,CAAiBC,aAAjB,GAAiCJ,IAAI,CAACH,YAAtC;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACUQ,mBAAmB,EACzB;EACAR,YAFyB,EAEX;IAAA;IAAA;;IAAA;MACV,OAAO,gDAA0B,KAAI,CAACK,aAA/B,CAAP;IADU;EAEb;EACD;AACJ;AACA;AACA;AACA;;;EACII,QAAQ,CAACC,IAAD,EAAO;IACX,IAAI,CAACA,IAAL,EAAW;MACP,MAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;IACH;;IACD,IAAID,IAAI,CAACE,IAAL,KAAc,iBAAlB,EAAqC;MACjC,MAAM,IAAID,KAAJ,CAAU,mEAAV,CAAN;IACH;;IACD,IAAI,CAACD,IAAI,CAACG,SAAV,EAAqB;MACjB,MAAM,IAAIF,KAAJ,CAAU,6DAAV,CAAN;IACH;;IACD,IAAI,CAACD,IAAI,CAACI,aAAV,EAAyB;MACrB,MAAM,IAAIH,KAAJ,CAAU,iEAAV,CAAN;IACH;;IACD,IAAI,CAACD,IAAI,CAACH,aAAV,EAAyB;MACrB,MAAM,IAAII,KAAJ,CAAU,iEAAV,CAAN;IACH;;IACD,KAAKI,SAAL,GAAiBL,IAAI,CAACG,SAAtB;IACA,KAAKG,aAAL,GAAqBN,IAAI,CAACI,aAA1B;IACA,KAAKT,aAAL,GAAqBK,IAAI,CAACH,aAA1B;IACA,KAAKD,WAAL,CAAiBC,aAAjB,GAAiCG,IAAI,CAACH,aAAtC;IACA,KAAKU,cAAL,GAAsBP,IAAI,CAACQ,gBAA3B;EACH;;EACDC,UAAU,CAACC,WAAD,EAAcC,QAAd,EAAwB;IAC9B,IAAIA,QAAJ,EAAc;MACV,KAAKC,eAAL,CAAqBF,WAArB,EAAkCG,IAAlC,CAAuC,MAAMF,QAAQ,EAArD,EAAyDA,QAAzD;IACH,CAFD,MAGK;MACD,OAAO,KAAKC,eAAL,CAAqBF,WAArB,CAAP;IACH;EACJ;;EACKE,eAAe,CAACF,WAAD,EAAc;IAAA;;IAAA;MAC/B,OAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QACpC,IAAI,CAACN,WAAL,EAAkB;UACd,OAAOM,MAAM,CAAC,IAAIf,KAAJ,CAAU,0DAAV,CAAD,CAAb;QACH;;QACD,IAAIgB,CAAC,GAAG,EAAR;QACAP,WAAW,CACNQ,WADL,CACiB,MADjB,EAEKC,EAFL,CAEQ,OAFR,EAEiBH,MAFjB,EAGKG,EAHL,CAGQ,MAHR,EAGgBC,KAAK,IAAKH,CAAC,IAAIG,KAH/B,EAIKD,EAJL,CAIQ,KAJR,EAIe,MAAM;UACjB,IAAI;YACA,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAb;;YACA,MAAI,CAAClB,QAAL,CAAcsB,IAAd;;YACA,OAAON,OAAO,EAAd;UACH,CAJD,CAKA,OAAOS,GAAP,EAAY;YACR,OAAOR,MAAM,CAACQ,GAAD,CAAb;UACH;QACJ,CAbD;MAcH,CAnBM,CAAP;IAD+B;EAqBlC;;AAjFuD;;AAmF5D5C,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}