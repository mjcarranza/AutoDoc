{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fallback = exports.GoogleError = exports.operation = exports.Operation = exports.warn = exports.protobufMinimal = exports.protobuf = exports.createApiCall = exports.LocationProtos = exports.IamProtos = exports.operationsProtos = exports.lro = exports.GrpcClient = exports.defaultToObjectOptions = exports.LocationsClient = exports.IamClient = exports.OperationsClient = exports.StreamType = exports.StreamDescriptor = exports.PageDescriptor = exports.LongrunningDescriptor = exports.BundleDescriptor = exports.version = exports.createDefaultBackoffSettings = exports.RetryOptions = exports.constructSettings = exports.CallSettings = exports.routingHeader = exports.PathTemplate = void 0;\n\nconst objectHash = require(\"object-hash\");\n\nconst protobuf = require(\"protobufjs\");\n\nexports.protobuf = protobuf;\n\nconst gax = require(\"./gax\");\n\nconst routingHeader = require(\"./routingHeader\");\n\nexports.routingHeader = routingHeader;\n\nconst status_1 = require(\"./status\");\n\nconst google_auth_library_1 = require(\"google-auth-library\");\n\nconst operationsClient_1 = require(\"./operationsClient\");\n\nconst createApiCall_1 = require(\"./createApiCall\");\n\nconst fallbackRest = require(\"./fallbackRest\");\n\nconst featureDetection_1 = require(\"./featureDetection\");\n\nconst fallbackServiceStub_1 = require(\"./fallbackServiceStub\");\n\nconst streaming_1 = require(\"./streamingCalls/streaming\");\n\nconst util_1 = require(\"./util\");\n\nconst IamProtos = require(\"../protos/iam_service\");\n\nexports.IamProtos = IamProtos;\n\nconst LocationProtos = require(\"../protos/locations\");\n\nexports.LocationProtos = LocationProtos;\n\nconst operationsProtos = require(\"../protos/operations\");\n\nexports.operationsProtos = operationsProtos;\n\nvar pathTemplate_1 = require(\"./pathTemplate\");\n\nObject.defineProperty(exports, \"PathTemplate\", {\n  enumerable: true,\n  get: function () {\n    return pathTemplate_1.PathTemplate;\n  }\n});\n\nvar gax_1 = require(\"./gax\");\n\nObject.defineProperty(exports, \"CallSettings\", {\n  enumerable: true,\n  get: function () {\n    return gax_1.CallSettings;\n  }\n});\nObject.defineProperty(exports, \"constructSettings\", {\n  enumerable: true,\n  get: function () {\n    return gax_1.constructSettings;\n  }\n});\nObject.defineProperty(exports, \"RetryOptions\", {\n  enumerable: true,\n  get: function () {\n    return gax_1.RetryOptions;\n  }\n});\nObject.defineProperty(exports, \"createDefaultBackoffSettings\", {\n  enumerable: true,\n  get: function () {\n    return gax_1.createDefaultBackoffSettings;\n  }\n});\nexports.version = require('../../package.json').version + '-fallback';\n\nvar descriptor_1 = require(\"./descriptor\");\n\nObject.defineProperty(exports, \"BundleDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return descriptor_1.BundleDescriptor;\n  }\n});\nObject.defineProperty(exports, \"LongrunningDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return descriptor_1.LongrunningDescriptor;\n  }\n});\nObject.defineProperty(exports, \"PageDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return descriptor_1.PageDescriptor;\n  }\n});\nObject.defineProperty(exports, \"StreamDescriptor\", {\n  enumerable: true,\n  get: function () {\n    return descriptor_1.StreamDescriptor;\n  }\n});\n\nvar streaming_2 = require(\"./streamingCalls/streaming\");\n\nObject.defineProperty(exports, \"StreamType\", {\n  enumerable: true,\n  get: function () {\n    return streaming_2.StreamType;\n  }\n});\n\nvar operationsClient_2 = require(\"./operationsClient\");\n\nObject.defineProperty(exports, \"OperationsClient\", {\n  enumerable: true,\n  get: function () {\n    return operationsClient_2.OperationsClient;\n  }\n});\n\nvar iamService_1 = require(\"./iamService\");\n\nObject.defineProperty(exports, \"IamClient\", {\n  enumerable: true,\n  get: function () {\n    return iamService_1.IamClient;\n  }\n});\n\nvar locationService_1 = require(\"./locationService\");\n\nObject.defineProperty(exports, \"LocationsClient\", {\n  enumerable: true,\n  get: function () {\n    return locationService_1.LocationsClient;\n  }\n});\nexports.defaultToObjectOptions = {\n  keepCase: false,\n  longs: String,\n  enums: String,\n  defaults: true,\n  oneofs: true\n};\nconst CLIENT_VERSION_HEADER = 'x-goog-api-client';\n\nclass GrpcClient {\n  /**\n   * In rare cases users might need to deallocate all memory consumed by loaded protos.\n   * This method will delete the proto cache content.\n   */\n  static clearProtoCache() {\n    GrpcClient.protoCache.clear();\n  }\n  /**\n   * gRPC-fallback version of GrpcClient\n   * Implements GrpcClient API for a browser using grpc-fallback protocol (sends serialized protobuf to HTTP/1 $rpc endpoint).\n   *\n   * @param {Object=} options.auth - An instance of OAuth2Client to use in browser, or an instance of GoogleAuth from google-auth-library\n   *  to use in Node.js. Required for browser, optional for Node.js.\n   * @constructor\n   */\n\n\n  constructor(options = {}) {\n    var _a;\n\n    if (!(0, featureDetection_1.isNodeJS)()) {\n      if (!options.auth) {\n        throw new Error(JSON.stringify(options) + 'You need to pass auth instance to use gRPC-fallback client in browser or other non-Node.js environments. Use OAuth2Client from google-auth-library.');\n      }\n\n      this.auth = options.auth;\n    } else {\n      this.auth = options.auth || new google_auth_library_1.GoogleAuth(options);\n    }\n\n    this.fallback = options.fallback ? true : false;\n    this.grpcVersion = require('../../package.json').version;\n    this.httpRules = options.httpRules;\n    this.numericEnums = (_a = options.numericEnums) !== null && _a !== void 0 ? _a : false;\n  }\n  /**\n   * gRPC-fallback version of loadProto\n   * Loads the protobuf root object from a JSON object created from a proto file\n   * @param {Object} jsonObject - A JSON version of a protofile created usin protobuf.js\n   * @returns {Object} Root namespace of proto JSON\n   */\n\n\n  loadProto(jsonObject) {\n    const rootObject = protobuf.Root.fromJSON(jsonObject);\n    return rootObject;\n  }\n\n  loadProtoJSON(json, ignoreCache = false) {\n    const hash = objectHash(JSON.stringify(json)).toString();\n    const cached = GrpcClient.protoCache.get(hash);\n\n    if (cached && !ignoreCache) {\n      return cached;\n    }\n\n    const root = protobuf.Root.fromJSON(json);\n    GrpcClient.protoCache.set(hash, root);\n    return root;\n  }\n\n  static getServiceMethods(service) {\n    const methods = {};\n\n    for (const [methodName, methodObject] of Object.entries(service.methods)) {\n      const methodNameLowerCamelCase = (0, util_1.toLowerCamelCase)(methodName);\n      methods[methodNameLowerCamelCase] = methodObject;\n    }\n\n    return methods;\n  }\n  /**\n   * gRPC-fallback version of constructSettings\n   * A wrapper of {@link constructSettings} function under the gRPC context.\n   *\n   * Most of parameters are common among constructSettings, please take a look.\n   * @param {string} serviceName - The fullly-qualified name of the service.\n   * @param {Object} clientConfig - A dictionary of the client config.\n   * @param {Object} configOverrides - A dictionary of overriding configs.\n   * @param {Object} headers - A dictionary of additional HTTP header name to\n   *   its value.\n   * @return {Object} A mapping of method names to CallSettings.\n   */\n\n\n  constructSettings(serviceName, clientConfig, configOverrides, headers) {\n    function buildMetadata(abTests, moreHeaders) {\n      const metadata = {};\n\n      if (!headers) {\n        headers = {};\n      } // Since gRPC expects each header to be an array,\n      // we are doing the same for fallback here.\n\n\n      for (const key in headers) {\n        metadata[key] = Array.isArray(headers[key]) ? headers[key] : [headers[key]];\n      } // gRPC-fallback request must have 'grpc-web/' in 'x-goog-api-client'\n\n\n      const clientVersions = [];\n\n      if (metadata[CLIENT_VERSION_HEADER] && metadata[CLIENT_VERSION_HEADER][0]) {\n        clientVersions.push(...metadata[CLIENT_VERSION_HEADER][0].split(' '));\n      }\n\n      clientVersions.push(`grpc-web/${exports.version}`);\n      metadata[CLIENT_VERSION_HEADER] = [clientVersions.join(' ')];\n\n      if (!moreHeaders) {\n        return metadata;\n      }\n\n      for (const key in moreHeaders) {\n        if (key.toLowerCase() !== CLIENT_VERSION_HEADER) {\n          const value = moreHeaders[key];\n\n          if (Array.isArray(value)) {\n            if (metadata[key] === undefined) {\n              metadata[key] = value;\n            } else {\n              if (Array.isArray(metadata[key])) {\n                metadata[key].push(...value);\n              } else {\n                throw new Error(`Can not add value ${value} to the call metadata.`);\n              }\n            }\n          } else {\n            metadata[key] = [value];\n          }\n        }\n      }\n\n      return metadata;\n    }\n\n    return gax.constructSettings(serviceName, clientConfig, configOverrides, status_1.Status, {\n      metadataBuilder: buildMetadata\n    });\n  }\n  /**\n   * gRPC-fallback version of createStub\n   * Creates a gRPC-fallback stub with authentication headers built from supplied OAuth2Client instance\n   *\n   * @param {function} CreateStub - The constructor function of the stub.\n   * @param {Object} service - A protobufjs Service object (as returned by lookupService)\n   * @param {Object} opts - Connection options, as described below.\n   * @param {string} opts.servicePath - The hostname of the API endpoint service.\n   * @param {number} opts.port - The port of the service.\n   * @return {Promise} A promise which resolves to a gRPC-fallback service stub, which is a protobuf.js service stub instance modified to match the gRPC stub API\n   */\n\n\n  createStub(service, opts, // For consistency with createStub in grpc.ts, customServicePath is defined:\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  customServicePath) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.authClient) {\n        if (_this.auth && 'getClient' in _this.auth) {\n          _this.authClient = yield _this.auth.getClient();\n        } else if (_this.auth && 'getRequestHeaders' in _this.auth) {\n          _this.authClient = _this.auth;\n        }\n      }\n\n      if (!_this.authClient) {\n        throw new Error('No authentication was provided');\n      }\n\n      service.resolveAll();\n      const methods = GrpcClient.getServiceMethods(service);\n      const protocol = opts.protocol || 'https';\n      let servicePath = opts.servicePath;\n\n      if (!servicePath && service.options && service.options['(google.api.default_host)']) {\n        servicePath = service.options['(google.api.default_host)'];\n      }\n\n      if (!servicePath) {\n        throw new Error(`Cannot determine service API path for service ${service.name}.`);\n      }\n\n      let servicePort;\n      const match = servicePath.match(/^(.*):(\\d+)$/);\n\n      if (match) {\n        servicePath = match[1];\n        servicePort = parseInt(match[2]);\n      }\n\n      if (opts.port) {\n        servicePort = opts.port;\n      } else if (!servicePort) {\n        servicePort = 443;\n      }\n\n      const encoder = fallbackRest.encodeRequest;\n      const decoder = fallbackRest.decodeResponse;\n      const serviceStub = (0, fallbackServiceStub_1.generateServiceStub)(methods, protocol, servicePath, servicePort, _this.authClient, encoder, decoder, _this.numericEnums);\n      return serviceStub;\n    })();\n  }\n  /**\n   * Creates a 'bytelength' function for a given proto message class.\n   *\n   * See {@link BundleDescriptor} about the meaning of the return value.\n   *\n   * @param {function} message - a constructor function that is generated by\n   *   protobuf.js. Assumes 'encoder' field in the message.\n   * @return {function(Object):number} - a function to compute the byte length\n   *   for an object.\n   */\n\n\n  static createByteLengthFunction(message) {\n    return gax.createByteLengthFunction(message);\n  }\n\n}\n\nexports.GrpcClient = GrpcClient;\nGrpcClient.protoCache = new Map();\n/**\n * gRPC-fallback version of lro\n *\n * @param {Object=} options.auth - An instance of google-auth-library.\n * @return {Object} A OperationsClientBuilder that will return a OperationsClient\n */\n\nfunction lro(options) {\n  options = Object.assign({\n    scopes: []\n  }, options);\n\n  if (options.protoJson) {\n    options = Object.assign(options, {\n      fallback: true\n    });\n  }\n\n  const gaxGrpc = new GrpcClient(options);\n  return new operationsClient_1.OperationsClientBuilder(gaxGrpc, options.protoJson);\n}\n\nexports.lro = lro;\n/**\n * gRPC-fallback version of createApiCall\n *\n * Converts an rpc call into an API call governed by the settings.\n *\n * In typical usage, `func` will be a promise to a callable used to make an rpc\n * request. This will mostly likely be a bound method from a request stub used\n * to make an rpc call. It is not a direct function but a Promise instance,\n * because of its asynchronism (typically, obtaining the auth information).\n *\n * The result is a function which manages the API call with the given settings\n * and the options on the invocation.\n *\n * Throws exception on unsupported streaming calls\n *\n * @param {Promise<GRPCCall>|GRPCCall} func - is either a promise to be used to make\n *   a bare RPC call, or just a bare RPC call.\n * @param {CallSettings} settings - provides the settings for this call\n * @param {Descriptor} descriptor - optionally specify the descriptor for\n *   the method call.\n * @return {GaxCall} func - a bound method on a request stub used\n *   to make an rpc call.\n */\n\nfunction createApiCall(func, settings, descriptor, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n_fallback // unused; for compatibility only\n) {\n  if (descriptor && 'streaming' in descriptor && descriptor.type !== streaming_1.StreamType.SERVER_STREAMING) {\n    return () => {\n      throw new Error('The REST transport currently does not support client-streaming or bidi-stream calls.');\n    };\n  }\n\n  if (descriptor && 'streaming' in descriptor && !(0, featureDetection_1.isNodeJS)()) {\n    return () => {\n      throw new Error('Server streaming over the REST transport is only supported in Node.js.');\n    };\n  }\n\n  return (0, createApiCall_1.createApiCall)(func, settings, descriptor);\n}\n\nexports.createApiCall = createApiCall;\nexports.protobufMinimal = require(\"protobufjs/minimal\");\n\nvar warnings_1 = require(\"./warnings\");\n\nObject.defineProperty(exports, \"warn\", {\n  enumerable: true,\n  get: function () {\n    return warnings_1.warn;\n  }\n});\n\nvar longrunning_1 = require(\"./longRunningCalls/longrunning\");\n\nObject.defineProperty(exports, \"Operation\", {\n  enumerable: true,\n  get: function () {\n    return longrunning_1.Operation;\n  }\n});\nObject.defineProperty(exports, \"operation\", {\n  enumerable: true,\n  get: function () {\n    return longrunning_1.operation;\n  }\n});\n\nvar googleError_1 = require(\"./googleError\");\n\nObject.defineProperty(exports, \"GoogleError\", {\n  enumerable: true,\n  get: function () {\n    return googleError_1.GoogleError;\n  }\n}); // Different environments or bundlers may or may not respect \"browser\" field\n// in package.json (e.g. Electron does not respect it, but if you run the code\n// through webpack first, it will follow the \"browser\" field).\n// To make it safer and more compatible, let's make sure that if you do\n// const gax = require(\"google-gax\");\n// you can always ask for gax.fallback, regardless of \"browser\" field being\n// understood or not.\n\nconst fallback = module.exports;\nexports.fallback = fallback;","map":{"version":3,"names":["Object","defineProperty","exports","value","fallback","GoogleError","operation","Operation","warn","protobufMinimal","protobuf","createApiCall","LocationProtos","IamProtos","operationsProtos","lro","GrpcClient","defaultToObjectOptions","LocationsClient","IamClient","OperationsClient","StreamType","StreamDescriptor","PageDescriptor","LongrunningDescriptor","BundleDescriptor","version","createDefaultBackoffSettings","RetryOptions","constructSettings","CallSettings","routingHeader","PathTemplate","objectHash","require","gax","status_1","google_auth_library_1","operationsClient_1","createApiCall_1","fallbackRest","featureDetection_1","fallbackServiceStub_1","streaming_1","util_1","pathTemplate_1","enumerable","get","gax_1","descriptor_1","streaming_2","operationsClient_2","iamService_1","locationService_1","keepCase","longs","String","enums","defaults","oneofs","CLIENT_VERSION_HEADER","clearProtoCache","protoCache","clear","constructor","options","_a","isNodeJS","auth","Error","JSON","stringify","GoogleAuth","grpcVersion","httpRules","numericEnums","loadProto","jsonObject","rootObject","Root","fromJSON","loadProtoJSON","json","ignoreCache","hash","toString","cached","root","set","getServiceMethods","service","methods","methodName","methodObject","entries","methodNameLowerCamelCase","toLowerCamelCase","serviceName","clientConfig","configOverrides","headers","buildMetadata","abTests","moreHeaders","metadata","key","Array","isArray","clientVersions","push","split","join","toLowerCase","undefined","Status","metadataBuilder","createStub","opts","customServicePath","authClient","getClient","resolveAll","protocol","servicePath","name","servicePort","match","parseInt","port","encoder","encodeRequest","decoder","decodeResponse","serviceStub","generateServiceStub","createByteLengthFunction","message","Map","assign","scopes","protoJson","gaxGrpc","OperationsClientBuilder","func","settings","descriptor","_fallback","type","SERVER_STREAMING","warnings_1","longrunning_1","googleError_1","module"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/fallback.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fallback = exports.GoogleError = exports.operation = exports.Operation = exports.warn = exports.protobufMinimal = exports.protobuf = exports.createApiCall = exports.LocationProtos = exports.IamProtos = exports.operationsProtos = exports.lro = exports.GrpcClient = exports.defaultToObjectOptions = exports.LocationsClient = exports.IamClient = exports.OperationsClient = exports.StreamType = exports.StreamDescriptor = exports.PageDescriptor = exports.LongrunningDescriptor = exports.BundleDescriptor = exports.version = exports.createDefaultBackoffSettings = exports.RetryOptions = exports.constructSettings = exports.CallSettings = exports.routingHeader = exports.PathTemplate = void 0;\nconst objectHash = require(\"object-hash\");\nconst protobuf = require(\"protobufjs\");\nexports.protobuf = protobuf;\nconst gax = require(\"./gax\");\nconst routingHeader = require(\"./routingHeader\");\nexports.routingHeader = routingHeader;\nconst status_1 = require(\"./status\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst operationsClient_1 = require(\"./operationsClient\");\nconst createApiCall_1 = require(\"./createApiCall\");\nconst fallbackRest = require(\"./fallbackRest\");\nconst featureDetection_1 = require(\"./featureDetection\");\nconst fallbackServiceStub_1 = require(\"./fallbackServiceStub\");\nconst streaming_1 = require(\"./streamingCalls/streaming\");\nconst util_1 = require(\"./util\");\nconst IamProtos = require(\"../protos/iam_service\");\nexports.IamProtos = IamProtos;\nconst LocationProtos = require(\"../protos/locations\");\nexports.LocationProtos = LocationProtos;\nconst operationsProtos = require(\"../protos/operations\");\nexports.operationsProtos = operationsProtos;\nvar pathTemplate_1 = require(\"./pathTemplate\");\nObject.defineProperty(exports, \"PathTemplate\", { enumerable: true, get: function () { return pathTemplate_1.PathTemplate; } });\nvar gax_1 = require(\"./gax\");\nObject.defineProperty(exports, \"CallSettings\", { enumerable: true, get: function () { return gax_1.CallSettings; } });\nObject.defineProperty(exports, \"constructSettings\", { enumerable: true, get: function () { return gax_1.constructSettings; } });\nObject.defineProperty(exports, \"RetryOptions\", { enumerable: true, get: function () { return gax_1.RetryOptions; } });\nObject.defineProperty(exports, \"createDefaultBackoffSettings\", { enumerable: true, get: function () { return gax_1.createDefaultBackoffSettings; } });\nexports.version = require('../../package.json').version + '-fallback';\nvar descriptor_1 = require(\"./descriptor\");\nObject.defineProperty(exports, \"BundleDescriptor\", { enumerable: true, get: function () { return descriptor_1.BundleDescriptor; } });\nObject.defineProperty(exports, \"LongrunningDescriptor\", { enumerable: true, get: function () { return descriptor_1.LongrunningDescriptor; } });\nObject.defineProperty(exports, \"PageDescriptor\", { enumerable: true, get: function () { return descriptor_1.PageDescriptor; } });\nObject.defineProperty(exports, \"StreamDescriptor\", { enumerable: true, get: function () { return descriptor_1.StreamDescriptor; } });\nvar streaming_2 = require(\"./streamingCalls/streaming\");\nObject.defineProperty(exports, \"StreamType\", { enumerable: true, get: function () { return streaming_2.StreamType; } });\nvar operationsClient_2 = require(\"./operationsClient\");\nObject.defineProperty(exports, \"OperationsClient\", { enumerable: true, get: function () { return operationsClient_2.OperationsClient; } });\nvar iamService_1 = require(\"./iamService\");\nObject.defineProperty(exports, \"IamClient\", { enumerable: true, get: function () { return iamService_1.IamClient; } });\nvar locationService_1 = require(\"./locationService\");\nObject.defineProperty(exports, \"LocationsClient\", { enumerable: true, get: function () { return locationService_1.LocationsClient; } });\nexports.defaultToObjectOptions = {\n    keepCase: false,\n    longs: String,\n    enums: String,\n    defaults: true,\n    oneofs: true,\n};\nconst CLIENT_VERSION_HEADER = 'x-goog-api-client';\nclass GrpcClient {\n    /**\n     * In rare cases users might need to deallocate all memory consumed by loaded protos.\n     * This method will delete the proto cache content.\n     */\n    static clearProtoCache() {\n        GrpcClient.protoCache.clear();\n    }\n    /**\n     * gRPC-fallback version of GrpcClient\n     * Implements GrpcClient API for a browser using grpc-fallback protocol (sends serialized protobuf to HTTP/1 $rpc endpoint).\n     *\n     * @param {Object=} options.auth - An instance of OAuth2Client to use in browser, or an instance of GoogleAuth from google-auth-library\n     *  to use in Node.js. Required for browser, optional for Node.js.\n     * @constructor\n     */\n    constructor(options = {}) {\n        var _a;\n        if (!(0, featureDetection_1.isNodeJS)()) {\n            if (!options.auth) {\n                throw new Error(JSON.stringify(options) +\n                    'You need to pass auth instance to use gRPC-fallback client in browser or other non-Node.js environments. Use OAuth2Client from google-auth-library.');\n            }\n            this.auth = options.auth;\n        }\n        else {\n            this.auth =\n                options.auth ||\n                    new google_auth_library_1.GoogleAuth(options);\n        }\n        this.fallback = options.fallback ? true : false;\n        this.grpcVersion = require('../../package.json').version;\n        this.httpRules = options.httpRules;\n        this.numericEnums = (_a = options.numericEnums) !== null && _a !== void 0 ? _a : false;\n    }\n    /**\n     * gRPC-fallback version of loadProto\n     * Loads the protobuf root object from a JSON object created from a proto file\n     * @param {Object} jsonObject - A JSON version of a protofile created usin protobuf.js\n     * @returns {Object} Root namespace of proto JSON\n     */\n    loadProto(jsonObject) {\n        const rootObject = protobuf.Root.fromJSON(jsonObject);\n        return rootObject;\n    }\n    loadProtoJSON(json, ignoreCache = false) {\n        const hash = objectHash(JSON.stringify(json)).toString();\n        const cached = GrpcClient.protoCache.get(hash);\n        if (cached && !ignoreCache) {\n            return cached;\n        }\n        const root = protobuf.Root.fromJSON(json);\n        GrpcClient.protoCache.set(hash, root);\n        return root;\n    }\n    static getServiceMethods(service) {\n        const methods = {};\n        for (const [methodName, methodObject] of Object.entries(service.methods)) {\n            const methodNameLowerCamelCase = (0, util_1.toLowerCamelCase)(methodName);\n            methods[methodNameLowerCamelCase] = methodObject;\n        }\n        return methods;\n    }\n    /**\n     * gRPC-fallback version of constructSettings\n     * A wrapper of {@link constructSettings} function under the gRPC context.\n     *\n     * Most of parameters are common among constructSettings, please take a look.\n     * @param {string} serviceName - The fullly-qualified name of the service.\n     * @param {Object} clientConfig - A dictionary of the client config.\n     * @param {Object} configOverrides - A dictionary of overriding configs.\n     * @param {Object} headers - A dictionary of additional HTTP header name to\n     *   its value.\n     * @return {Object} A mapping of method names to CallSettings.\n     */\n    constructSettings(serviceName, clientConfig, configOverrides, headers) {\n        function buildMetadata(abTests, moreHeaders) {\n            const metadata = {};\n            if (!headers) {\n                headers = {};\n            }\n            // Since gRPC expects each header to be an array,\n            // we are doing the same for fallback here.\n            for (const key in headers) {\n                metadata[key] = Array.isArray(headers[key])\n                    ? headers[key]\n                    : [headers[key]];\n            }\n            // gRPC-fallback request must have 'grpc-web/' in 'x-goog-api-client'\n            const clientVersions = [];\n            if (metadata[CLIENT_VERSION_HEADER] &&\n                metadata[CLIENT_VERSION_HEADER][0]) {\n                clientVersions.push(...metadata[CLIENT_VERSION_HEADER][0].split(' '));\n            }\n            clientVersions.push(`grpc-web/${exports.version}`);\n            metadata[CLIENT_VERSION_HEADER] = [clientVersions.join(' ')];\n            if (!moreHeaders) {\n                return metadata;\n            }\n            for (const key in moreHeaders) {\n                if (key.toLowerCase() !== CLIENT_VERSION_HEADER) {\n                    const value = moreHeaders[key];\n                    if (Array.isArray(value)) {\n                        if (metadata[key] === undefined) {\n                            metadata[key] = value;\n                        }\n                        else {\n                            if (Array.isArray(metadata[key])) {\n                                metadata[key].push(...value);\n                            }\n                            else {\n                                throw new Error(`Can not add value ${value} to the call metadata.`);\n                            }\n                        }\n                    }\n                    else {\n                        metadata[key] = [value];\n                    }\n                }\n            }\n            return metadata;\n        }\n        return gax.constructSettings(serviceName, clientConfig, configOverrides, status_1.Status, { metadataBuilder: buildMetadata });\n    }\n    /**\n     * gRPC-fallback version of createStub\n     * Creates a gRPC-fallback stub with authentication headers built from supplied OAuth2Client instance\n     *\n     * @param {function} CreateStub - The constructor function of the stub.\n     * @param {Object} service - A protobufjs Service object (as returned by lookupService)\n     * @param {Object} opts - Connection options, as described below.\n     * @param {string} opts.servicePath - The hostname of the API endpoint service.\n     * @param {number} opts.port - The port of the service.\n     * @return {Promise} A promise which resolves to a gRPC-fallback service stub, which is a protobuf.js service stub instance modified to match the gRPC stub API\n     */\n    async createStub(service, opts, \n    // For consistency with createStub in grpc.ts, customServicePath is defined:\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    customServicePath) {\n        if (!this.authClient) {\n            if (this.auth && 'getClient' in this.auth) {\n                this.authClient = (await this.auth.getClient());\n            }\n            else if (this.auth && 'getRequestHeaders' in this.auth) {\n                this.authClient = this.auth;\n            }\n        }\n        if (!this.authClient) {\n            throw new Error('No authentication was provided');\n        }\n        service.resolveAll();\n        const methods = GrpcClient.getServiceMethods(service);\n        const protocol = opts.protocol || 'https';\n        let servicePath = opts.servicePath;\n        if (!servicePath &&\n            service.options &&\n            service.options['(google.api.default_host)']) {\n            servicePath = service.options['(google.api.default_host)'];\n        }\n        if (!servicePath) {\n            throw new Error(`Cannot determine service API path for service ${service.name}.`);\n        }\n        let servicePort;\n        const match = servicePath.match(/^(.*):(\\d+)$/);\n        if (match) {\n            servicePath = match[1];\n            servicePort = parseInt(match[2]);\n        }\n        if (opts.port) {\n            servicePort = opts.port;\n        }\n        else if (!servicePort) {\n            servicePort = 443;\n        }\n        const encoder = fallbackRest.encodeRequest;\n        const decoder = fallbackRest.decodeResponse;\n        const serviceStub = (0, fallbackServiceStub_1.generateServiceStub)(methods, protocol, servicePath, servicePort, this.authClient, encoder, decoder, this.numericEnums);\n        return serviceStub;\n    }\n    /**\n     * Creates a 'bytelength' function for a given proto message class.\n     *\n     * See {@link BundleDescriptor} about the meaning of the return value.\n     *\n     * @param {function} message - a constructor function that is generated by\n     *   protobuf.js. Assumes 'encoder' field in the message.\n     * @return {function(Object):number} - a function to compute the byte length\n     *   for an object.\n     */\n    static createByteLengthFunction(message) {\n        return gax.createByteLengthFunction(message);\n    }\n}\nexports.GrpcClient = GrpcClient;\nGrpcClient.protoCache = new Map();\n/**\n * gRPC-fallback version of lro\n *\n * @param {Object=} options.auth - An instance of google-auth-library.\n * @return {Object} A OperationsClientBuilder that will return a OperationsClient\n */\nfunction lro(options) {\n    options = Object.assign({ scopes: [] }, options);\n    if (options.protoJson) {\n        options = Object.assign(options, { fallback: true });\n    }\n    const gaxGrpc = new GrpcClient(options);\n    return new operationsClient_1.OperationsClientBuilder(gaxGrpc, options.protoJson);\n}\nexports.lro = lro;\n/**\n * gRPC-fallback version of createApiCall\n *\n * Converts an rpc call into an API call governed by the settings.\n *\n * In typical usage, `func` will be a promise to a callable used to make an rpc\n * request. This will mostly likely be a bound method from a request stub used\n * to make an rpc call. It is not a direct function but a Promise instance,\n * because of its asynchronism (typically, obtaining the auth information).\n *\n * The result is a function which manages the API call with the given settings\n * and the options on the invocation.\n *\n * Throws exception on unsupported streaming calls\n *\n * @param {Promise<GRPCCall>|GRPCCall} func - is either a promise to be used to make\n *   a bare RPC call, or just a bare RPC call.\n * @param {CallSettings} settings - provides the settings for this call\n * @param {Descriptor} descriptor - optionally specify the descriptor for\n *   the method call.\n * @return {GaxCall} func - a bound method on a request stub used\n *   to make an rpc call.\n */\nfunction createApiCall(func, settings, descriptor, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_fallback // unused; for compatibility only\n) {\n    if (descriptor &&\n        'streaming' in descriptor &&\n        descriptor.type !== streaming_1.StreamType.SERVER_STREAMING) {\n        return () => {\n            throw new Error('The REST transport currently does not support client-streaming or bidi-stream calls.');\n        };\n    }\n    if (descriptor && 'streaming' in descriptor && !(0, featureDetection_1.isNodeJS)()) {\n        return () => {\n            throw new Error('Server streaming over the REST transport is only supported in Node.js.');\n        };\n    }\n    return (0, createApiCall_1.createApiCall)(func, settings, descriptor);\n}\nexports.createApiCall = createApiCall;\nexports.protobufMinimal = require(\"protobufjs/minimal\");\nvar warnings_1 = require(\"./warnings\");\nObject.defineProperty(exports, \"warn\", { enumerable: true, get: function () { return warnings_1.warn; } });\nvar longrunning_1 = require(\"./longRunningCalls/longrunning\");\nObject.defineProperty(exports, \"Operation\", { enumerable: true, get: function () { return longrunning_1.Operation; } });\nObject.defineProperty(exports, \"operation\", { enumerable: true, get: function () { return longrunning_1.operation; } });\nvar googleError_1 = require(\"./googleError\");\nObject.defineProperty(exports, \"GoogleError\", { enumerable: true, get: function () { return googleError_1.GoogleError; } });\n// Different environments or bundlers may or may not respect \"browser\" field\n// in package.json (e.g. Electron does not respect it, but if you run the code\n// through webpack first, it will follow the \"browser\" field).\n// To make it safer and more compatible, let's make sure that if you do\n// const gax = require(\"google-gax\");\n// you can always ask for gax.fallback, regardless of \"browser\" field being\n// understood or not.\nconst fallback = module.exports;\nexports.fallback = fallback;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}