{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamingApiCaller = void 0;\n\nconst warnings_1 = require(\"../warnings\");\n\nconst streaming_1 = require(\"./streaming\");\n\nclass StreamingApiCaller {\n  /**\n   * An API caller for methods of gRPC streaming.\n   * @private\n   * @constructor\n   * @param {StreamDescriptor} descriptor - the descriptor of the method structure.\n   */\n  constructor(descriptor) {\n    this.descriptor = descriptor;\n  }\n\n  init(callback) {\n    return new streaming_1.StreamProxy(this.descriptor.type, callback, this.descriptor.rest);\n  }\n\n  wrap(func) {\n    switch (this.descriptor.type) {\n      case streaming_1.StreamType.SERVER_STREAMING:\n        return (argument, metadata, options) => {\n          return func(argument, metadata, options);\n        };\n\n      case streaming_1.StreamType.CLIENT_STREAMING:\n        return (argument, metadata, options, callback) => {\n          return func(metadata, options, callback);\n        };\n\n      case streaming_1.StreamType.BIDI_STREAMING:\n        return (argument, metadata, options) => {\n          return func(metadata, options);\n        };\n\n      default:\n        (0, warnings_1.warn)('streaming_wrap_unknown_stream_type', `Unknown stream type: ${this.descriptor.type}`);\n    }\n\n    return func;\n  }\n\n  call(apiCall, argument, settings, stream) {\n    stream.setStream(apiCall, argument, settings.retryRequestOptions);\n  }\n\n  fail(stream, err) {\n    stream.emit('error', err);\n  }\n\n  result(stream) {\n    return stream;\n  }\n\n}\n\nexports.StreamingApiCaller = StreamingApiCaller;","map":{"version":3,"names":["Object","defineProperty","exports","value","StreamingApiCaller","warnings_1","require","streaming_1","constructor","descriptor","init","callback","StreamProxy","type","rest","wrap","func","StreamType","SERVER_STREAMING","argument","metadata","options","CLIENT_STREAMING","BIDI_STREAMING","warn","call","apiCall","settings","stream","setStream","retryRequestOptions","fail","err","emit","result"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/streamingCalls/streamingApiCaller.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamingApiCaller = void 0;\nconst warnings_1 = require(\"../warnings\");\nconst streaming_1 = require(\"./streaming\");\nclass StreamingApiCaller {\n    /**\n     * An API caller for methods of gRPC streaming.\n     * @private\n     * @constructor\n     * @param {StreamDescriptor} descriptor - the descriptor of the method structure.\n     */\n    constructor(descriptor) {\n        this.descriptor = descriptor;\n    }\n    init(callback) {\n        return new streaming_1.StreamProxy(this.descriptor.type, callback, this.descriptor.rest);\n    }\n    wrap(func) {\n        switch (this.descriptor.type) {\n            case streaming_1.StreamType.SERVER_STREAMING:\n                return (argument, metadata, options) => {\n                    return func(argument, metadata, options);\n                };\n            case streaming_1.StreamType.CLIENT_STREAMING:\n                return (argument, metadata, options, callback) => {\n                    return func(metadata, options, callback);\n                };\n            case streaming_1.StreamType.BIDI_STREAMING:\n                return (argument, metadata, options) => {\n                    return func(metadata, options);\n                };\n            default:\n                (0, warnings_1.warn)('streaming_wrap_unknown_stream_type', `Unknown stream type: ${this.descriptor.type}`);\n        }\n        return func;\n    }\n    call(apiCall, argument, settings, stream) {\n        stream.setStream(apiCall, argument, settings.retryRequestOptions);\n    }\n    fail(stream, err) {\n        stream.emit('error', err);\n    }\n    result(stream) {\n        return stream;\n    }\n}\nexports.StreamingApiCaller = StreamingApiCaller;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMF,kBAAN,CAAyB;EACrB;AACJ;AACA;AACA;AACA;AACA;EACII,WAAW,CAACC,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;;EACDC,IAAI,CAACC,QAAD,EAAW;IACX,OAAO,IAAIJ,WAAW,CAACK,WAAhB,CAA4B,KAAKH,UAAL,CAAgBI,IAA5C,EAAkDF,QAAlD,EAA4D,KAAKF,UAAL,CAAgBK,IAA5E,CAAP;EACH;;EACDC,IAAI,CAACC,IAAD,EAAO;IACP,QAAQ,KAAKP,UAAL,CAAgBI,IAAxB;MACI,KAAKN,WAAW,CAACU,UAAZ,CAAuBC,gBAA5B;QACI,OAAO,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;UACpC,OAAOL,IAAI,CAACG,QAAD,EAAWC,QAAX,EAAqBC,OAArB,CAAX;QACH,CAFD;;MAGJ,KAAKd,WAAW,CAACU,UAAZ,CAAuBK,gBAA5B;QACI,OAAO,CAACH,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BV,QAA9B,KAA2C;UAC9C,OAAOK,IAAI,CAACI,QAAD,EAAWC,OAAX,EAAoBV,QAApB,CAAX;QACH,CAFD;;MAGJ,KAAKJ,WAAW,CAACU,UAAZ,CAAuBM,cAA5B;QACI,OAAO,CAACJ,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;UACpC,OAAOL,IAAI,CAACI,QAAD,EAAWC,OAAX,CAAX;QACH,CAFD;;MAGJ;QACI,CAAC,GAAGhB,UAAU,CAACmB,IAAf,EAAqB,oCAArB,EAA4D,wBAAuB,KAAKf,UAAL,CAAgBI,IAAK,EAAxG;IAdR;;IAgBA,OAAOG,IAAP;EACH;;EACDS,IAAI,CAACC,OAAD,EAAUP,QAAV,EAAoBQ,QAApB,EAA8BC,MAA9B,EAAsC;IACtCA,MAAM,CAACC,SAAP,CAAiBH,OAAjB,EAA0BP,QAA1B,EAAoCQ,QAAQ,CAACG,mBAA7C;EACH;;EACDC,IAAI,CAACH,MAAD,EAASI,GAAT,EAAc;IACdJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAqBD,GAArB;EACH;;EACDE,MAAM,CAACN,MAAD,EAAS;IACX,OAAOA,MAAP;EACH;;AAxCoB;;AA0CzB1B,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}