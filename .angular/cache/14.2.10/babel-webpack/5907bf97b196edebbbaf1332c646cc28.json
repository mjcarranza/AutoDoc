{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpsProxyAgent = void 0;\n\nconst net = __importStar(require(\"net\"));\n\nconst tls = __importStar(require(\"tls\"));\n\nconst assert_1 = __importDefault(require(\"assert\"));\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst agent_base_1 = require(\"agent-base\");\n\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\n\nconst debug = (0, debug_1.default)('https-proxy-agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\n\nclass HttpsProxyAgent extends agent_base_1.Agent {\n  constructor(proxy, opts) {\n    super(opts);\n    this.options = {\n      path: undefined\n    };\n    this.proxy = typeof proxy === 'string' ? new URL(proxy) : proxy;\n    this.proxyHeaders = opts?.headers ?? {};\n    debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href); // Trim off the brackets from IPv6 addresses\n\n    const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n    const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n    this.connectOpts = {\n      // Attempt to negotiate http/1.1 for proxy servers that support http/2\n      ALPNProtocols: ['http/1.1'],\n      ...(opts ? omit(opts, 'headers') : null),\n      host,\n      port\n    };\n  }\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   */\n\n\n  connect(req, opts) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        proxy\n      } = _this;\n\n      if (!opts.host) {\n        throw new TypeError('No \"host\" provided');\n      } // Create a socket connection to the proxy server.\n\n\n      let socket;\n\n      if (proxy.protocol === 'https:') {\n        debug('Creating `tls.Socket`: %o', _this.connectOpts);\n        const servername = _this.connectOpts.servername || _this.connectOpts.host;\n        socket = tls.connect({ ..._this.connectOpts,\n          servername: servername && net.isIP(servername) ? undefined : servername\n        });\n      } else {\n        debug('Creating `net.Socket`: %o', _this.connectOpts);\n        socket = net.connect(_this.connectOpts);\n      }\n\n      const headers = typeof _this.proxyHeaders === 'function' ? _this.proxyHeaders() : { ..._this.proxyHeaders\n      };\n      const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n      let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`; // Inject the `Proxy-Authorization` header if necessary.\n\n      if (proxy.username || proxy.password) {\n        const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n        headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n      }\n\n      headers.Host = `${host}:${opts.port}`;\n\n      if (!headers['Proxy-Connection']) {\n        headers['Proxy-Connection'] = _this.keepAlive ? 'Keep-Alive' : 'close';\n      }\n\n      for (const name of Object.keys(headers)) {\n        payload += `${name}: ${headers[name]}\\r\\n`;\n      }\n\n      const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n      socket.write(`${payload}\\r\\n`);\n      const {\n        connect,\n        buffered\n      } = yield proxyResponsePromise;\n      req.emit('proxyConnect', connect);\n\n      _this.emit('proxyConnect', connect, req);\n\n      if (connect.statusCode === 200) {\n        req.once('socket', resume);\n\n        if (opts.secureEndpoint) {\n          // The proxy is connecting to a TLS server, so upgrade\n          // this socket connection to a TLS connection.\n          debug('Upgrading socket connection to TLS');\n          const servername = opts.servername || opts.host;\n          return tls.connect({ ...omit(opts, 'host', 'path', 'port'),\n            socket,\n            servername: net.isIP(servername) ? undefined : servername\n          });\n        }\n\n        return socket;\n      } // Some other status code that's not 200... need to re-play the HTTP\n      // header \"data\" events onto the socket once the HTTP machinery is\n      // attached so that the node core `http` can parse and handle the\n      // error status code.\n      // Close the original socket, and a new \"fake\" socket is returned\n      // instead, so that the proxy doesn't get the HTTP request\n      // written to it (which may contain `Authorization` headers or other\n      // sensitive data).\n      //\n      // See: https://hackerone.com/reports/541502\n\n\n      socket.destroy();\n      const fakeSocket = new net.Socket({\n        writable: false\n      });\n      fakeSocket.readable = true; // Need to wait for the \"socket\" event to re-play the \"data\" events.\n\n      req.once('socket', s => {\n        debug('Replaying proxy buffer for failed request');\n        (0, assert_1.default)(s.listenerCount('data') > 0); // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n        // this point the HTTP module machinery has been hooked up for\n        // the user.\n\n        s.push(buffered);\n        s.push(null);\n      });\n      return fakeSocket;\n    })();\n  }\n\n}\n\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\n\nfunction resume(socket) {\n  socket.resume();\n}\n\nfunction omit(obj, ...keys) {\n  const ret = {};\n  let key;\n\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n\n  return ret;\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","HttpsProxyAgent","net","require","tls","assert_1","debug_1","agent_base_1","parse_proxy_response_1","debug","default","Agent","constructor","proxy","opts","options","path","URL","proxyHeaders","headers","href","host","hostname","replace","port","parseInt","protocol","connectOpts","ALPNProtocols","omit","connect","req","TypeError","socket","servername","isIP","isIPv6","payload","username","password","auth","decodeURIComponent","Buffer","from","toString","Host","keepAlive","name","keys","proxyResponsePromise","parseProxyResponse","write","buffered","emit","statusCode","once","resume","secureEndpoint","destroy","fakeSocket","Socket","readable","s","listenerCount","push","protocols","obj","ret","key","includes"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/gaxios/node_modules/https-proxy-agent/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpsProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\nconst debug = (0, debug_1.default)('https-proxy-agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.options = { path: undefined };\n        this.proxy = typeof proxy === 'string' ? new URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: ['http/1.1'],\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */\n    async connect(req, opts) {\n        const { proxy } = this;\n        if (!opts.host) {\n            throw new TypeError('No \"host\" provided');\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            const servername = this.connectOpts.servername || this.connectOpts.host;\n            socket = tls.connect({\n                ...this.connectOpts,\n                servername: servername && net.isIP(servername) ? undefined : servername\n            });\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            payload += `${name}: ${headers[name]}\\r\\n`;\n        }\n        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect, buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                const servername = opts.servername || opts.host;\n                return tls.connect({\n                    ...omit(opts, 'host', 'path', 'port'),\n                    socket,\n                    servername: net.isIP(servername) ? undefined : servername,\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new net.Socket({ writable: false });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s) => {\n            debug('Replaying proxy buffer for failed request');\n            (0, assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}