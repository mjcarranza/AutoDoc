{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OngoingCallPromise = exports.OngoingCall = void 0;\n\nconst status_1 = require(\"./status\");\n\nconst googleError_1 = require(\"./googleError\");\n\nclass OngoingCall {\n  /**\n   * OngoingCall manages callback, API calls, and cancellation\n   * of the API calls.\n   * @param {APICallback=} callback\n   *   The callback to be called asynchronously when the API call\n   *   finishes.\n   * @constructor\n   * @property {APICallback} callback\n   *   The callback function to be called.\n   * @private\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.completed = false;\n  }\n  /**\n   * Cancels the ongoing promise.\n   */\n\n\n  cancel() {\n    if (this.completed) {\n      return;\n    }\n\n    this.completed = true;\n\n    if (this.cancelFunc) {\n      this.cancelFunc();\n    } else {\n      const error = new googleError_1.GoogleError('cancelled');\n      error.code = status_1.Status.CANCELLED;\n      this.callback(error);\n    }\n  }\n  /**\n   * Call calls the specified function. Result will be used to fulfill\n   * the promise.\n   *\n   * @param {SimpleCallbackFunction} func\n   *   A function for an API call.\n   * @param {Object} argument\n   *   A request object.\n   */\n\n\n  call(func, argument) {\n    if (this.completed) {\n      return;\n    }\n\n    const canceller = func(argument, (err, response, next, rawResponse) => {\n      this.completed = true;\n      setImmediate(this.callback, err, response, next, rawResponse);\n    });\n\n    if (canceller instanceof Promise) {\n      canceller.catch(err => {\n        setImmediate(this.callback, new googleError_1.GoogleError(err), null, null, null);\n      });\n    }\n\n    this.cancelFunc = () => canceller.cancel();\n  }\n\n}\n\nexports.OngoingCall = OngoingCall;\n\nclass OngoingCallPromise extends OngoingCall {\n  /**\n   * GaxPromise is GRPCCallbackWrapper, but it holds a promise when\n   * the API call finishes.\n   * @constructor\n   * @private\n   */\n  constructor() {\n    let resolveCallback;\n    let rejectCallback;\n\n    const callback = (err, response, next, rawResponse) => {\n      if (err) {\n        // If gRPC metadata exist, parsed google.rpc.status details.\n        if (err.metadata) {\n          rejectCallback(googleError_1.GoogleError.parseGRPCStatusDetails(err));\n        } else {\n          rejectCallback(err);\n        }\n      } else if (response !== undefined) {\n        resolveCallback([response, next || null, rawResponse || null]);\n      } else {\n        throw new googleError_1.GoogleError('Neither error nor response are defined');\n      }\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      resolveCallback = resolve;\n      rejectCallback = reject;\n    });\n    super(callback);\n    this.promise = promise;\n\n    this.promise.cancel = () => {\n      this.cancel();\n    };\n  }\n\n}\n\nexports.OngoingCallPromise = OngoingCallPromise;","map":{"version":3,"names":["Object","defineProperty","exports","value","OngoingCallPromise","OngoingCall","status_1","require","googleError_1","constructor","callback","completed","cancel","cancelFunc","error","GoogleError","code","Status","CANCELLED","call","func","argument","canceller","err","response","next","rawResponse","setImmediate","Promise","catch","resolveCallback","rejectCallback","metadata","parseGRPCStatusDetails","undefined","promise","resolve","reject"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/call.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OngoingCallPromise = exports.OngoingCall = void 0;\nconst status_1 = require(\"./status\");\nconst googleError_1 = require(\"./googleError\");\nclass OngoingCall {\n    /**\n     * OngoingCall manages callback, API calls, and cancellation\n     * of the API calls.\n     * @param {APICallback=} callback\n     *   The callback to be called asynchronously when the API call\n     *   finishes.\n     * @constructor\n     * @property {APICallback} callback\n     *   The callback function to be called.\n     * @private\n     */\n    constructor(callback) {\n        this.callback = callback;\n        this.completed = false;\n    }\n    /**\n     * Cancels the ongoing promise.\n     */\n    cancel() {\n        if (this.completed) {\n            return;\n        }\n        this.completed = true;\n        if (this.cancelFunc) {\n            this.cancelFunc();\n        }\n        else {\n            const error = new googleError_1.GoogleError('cancelled');\n            error.code = status_1.Status.CANCELLED;\n            this.callback(error);\n        }\n    }\n    /**\n     * Call calls the specified function. Result will be used to fulfill\n     * the promise.\n     *\n     * @param {SimpleCallbackFunction} func\n     *   A function for an API call.\n     * @param {Object} argument\n     *   A request object.\n     */\n    call(func, argument) {\n        if (this.completed) {\n            return;\n        }\n        const canceller = func(argument, (err, response, next, rawResponse) => {\n            this.completed = true;\n            setImmediate(this.callback, err, response, next, rawResponse);\n        });\n        if (canceller instanceof Promise) {\n            canceller.catch(err => {\n                setImmediate(this.callback, new googleError_1.GoogleError(err), null, null, null);\n            });\n        }\n        this.cancelFunc = () => canceller.cancel();\n    }\n}\nexports.OngoingCall = OngoingCall;\nclass OngoingCallPromise extends OngoingCall {\n    /**\n     * GaxPromise is GRPCCallbackWrapper, but it holds a promise when\n     * the API call finishes.\n     * @constructor\n     * @private\n     */\n    constructor() {\n        let resolveCallback;\n        let rejectCallback;\n        const callback = (err, response, next, rawResponse) => {\n            if (err) {\n                // If gRPC metadata exist, parsed google.rpc.status details.\n                if (err.metadata) {\n                    rejectCallback(googleError_1.GoogleError.parseGRPCStatusDetails(err));\n                }\n                else {\n                    rejectCallback(err);\n                }\n            }\n            else if (response !== undefined) {\n                resolveCallback([response, next || null, rawResponse || null]);\n            }\n            else {\n                throw new googleError_1.GoogleError('Neither error nor response are defined');\n            }\n        };\n        const promise = new Promise((resolve, reject) => {\n            resolveCallback = resolve;\n            rejectCallback = reject;\n        });\n        super(callback);\n        this.promise = promise;\n        this.promise.cancel = () => {\n            this.cancel();\n        };\n    }\n}\nexports.OngoingCallPromise = OngoingCallPromise;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}