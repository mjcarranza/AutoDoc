{"ast":null,"code":"\"use strict\"; // Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProductSearchClient = void 0;\n\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\n\n\nconst gapicConfig = require(\"./product_search_client_config.json\");\n\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1.Product|Product} has a collection of {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1\n */\n\n\nclass ProductSearchClient {\n  /**\n   * Construct an instance of ProductSearchClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new ProductSearchClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b;\n\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    }; // Ensure that options include all the required fields.\n\n    const staticMembers = this.constructor;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};\n    const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts); // Request numeric enum values if REST transport is used.\n\n    opts.numericEnums = true; // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n\n    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    } // Load google-gax module synchronously if needed\n\n\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    } // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n\n\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance; // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts); // Save options to use in initialize() method.\n\n    this._opts = opts; // Save the auth object to the client, for use by other methods.\n\n    this.auth = this._gaxGrpc.auth; // Set useJWTAccessWithScope on the auth object.\n\n    this.auth.useJWTAccessWithScope = true; // Set defaultServicePath on the auth object.\n\n    this.auth.defaultServicePath = staticMembers.servicePath; // Set the default scopes in auth client if needed.\n\n    if (servicePath === staticMembers.servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    } // Determine the client header string.\n\n\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n\n    if (typeof process !== 'undefined' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    } // Load the applicable protos.\n\n\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos); // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n\n    this.pathTemplates = {\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n      productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n      referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}')\n    }; // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n\n    this.descriptors.page = {\n      listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n      listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n      listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n      listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products')\n    };\n\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos); // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n\n\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [{\n        selector: 'google.longrunning.Operations.GetOperation',\n        get: '/v1/{name=projects/*/operations/*}',\n        additional_bindings: [{\n          get: '/v1/{name=projects/*/locations/*/operations/*}'\n        }, {\n          get: '/v1/{name=operations/*}'\n        }, {\n          get: '/v1/{name=locations/*/operations/*}'\n        }]\n      }];\n    }\n\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1.ImportProductSetsResponse');\n    const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n    const purgeProductsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n    const purgeProductsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n    this.descriptors.longrunning = {\n      importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n      purgeProducts: new this._gaxModule.LongrunningDescriptor(this.operationsClient, purgeProductsResponse.decode.bind(purgeProductsResponse), purgeProductsMetadata.decode.bind(purgeProductsMetadata))\n    }; // Put together the default options sent with requests.\n\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1.ProductSearch', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    }); // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n\n    this.innerApiCalls = {}; // Add a warn function to the client constructor so it can be easily tested.\n\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n\n\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.productSearchStub) {\n      return this.productSearchStub;\n    } // Put together the \"service stub\" for\n    // google.cloud.vision.v1.ProductSearch.\n\n\n    this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.vision.v1.ProductSearch') : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.vision.v1.ProductSearch, this._opts, this._providedCustomServicePath); // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n\n    const productSearchStubMethods = ['createProductSet', 'listProductSets', 'getProductSet', 'updateProductSet', 'deleteProductSet', 'createProduct', 'listProducts', 'getProduct', 'updateProduct', 'deleteProduct', 'createReferenceImage', 'deleteReferenceImage', 'listReferenceImages', 'getReferenceImage', 'addProductToProductSet', 'removeProductFromProductSet', 'listProductsInProductSet', 'importProductSets', 'purgeProducts'];\n\n    for (const methodName of productSearchStubMethods) {\n      const callPromise = this.productSearchStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.longrunning[methodName] || undefined;\n\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n\n      this.innerApiCalls[methodName] = apiCall;\n    }\n\n    return this.productSearchStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n\n\n  static get servicePath() {\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath(),\n   * exists for compatibility reasons.\n   * @returns {string} The DNS address for this service.\n   */\n\n\n  static get apiEndpoint() {\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n\n\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n\n\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/cloud-vision'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n\n\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n\n    return this.auth.getProjectId();\n  }\n\n  createProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createProductSet(request, options, callback);\n  }\n\n  getProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProductSet(request, options, callback);\n  }\n\n  updateProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateProductSet(request, options, callback);\n  }\n\n  deleteProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProductSet(request, options, callback);\n  }\n\n  createProduct(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createProduct(request, options, callback);\n  }\n\n  getProduct(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProduct(request, options, callback);\n  }\n\n  updateProduct(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateProduct(request, options, callback);\n  }\n\n  deleteProduct(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProduct(request, options, callback);\n  }\n\n  createReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createReferenceImage(request, options, callback);\n  }\n\n  deleteReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n  }\n\n  getReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getReferenceImage(request, options, callback);\n  }\n\n  addProductToProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.addProductToProductSet(request, options, callback);\n  }\n\n  removeProductFromProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n  }\n\n  importProductSets(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.importProductSets(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `importProductSets()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.import_product_sets.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_ImportProductSets_async\n   */\n\n\n  checkImportProductSetsProgress(name) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const request = new _this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n        name\n      });\n      const [operation] = yield _this.operationsClient.getOperation(request);\n      const decodeOperation = new _this._gaxModule.Operation(operation, _this.descriptors.longrunning.importProductSets, _this._gaxModule.createDefaultBackoffSettings());\n      return decodeOperation;\n    })();\n  }\n\n  purgeProducts(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.purgeProducts(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `purgeProducts()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.purge_products.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_PurgeProducts_async\n   */\n\n\n  checkPurgeProductsProgress(name) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const request = new _this2._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n        name\n      });\n      const [operation] = yield _this2.operationsClient.getOperation(request);\n      const decodeOperation = new _this2._gaxModule.Operation(operation, _this2.descriptors.longrunning.purgeProducts, _this2._gaxModule.createDefaultBackoffSettings());\n      return decodeOperation;\n    })();\n  }\n\n  listProductSets(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProductSets(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project from which ProductSets should be listed.\n   *\n   *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ProductSet|ProductSet} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductSetsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n\n\n  listProductSetsStream(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProductSets`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project from which ProductSets should be listed.\n   *\n   *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.list_product_sets.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_ListProductSets_async\n   */\n\n\n  listProductSetsAsync(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n  }\n\n  listProducts(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProducts(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project OR ProductSet from which Products should be listed.\n   *\n   *   Format:\n   *   `projects/PROJECT_ID/locations/LOC_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n\n\n  listProductsStream(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProducts'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProducts`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project OR ProductSet from which Products should be listed.\n   *\n   *   Format:\n   *   `projects/PROJECT_ID/locations/LOC_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.list_products.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_ListProducts_async\n   */\n\n\n  listProductsAsync(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProducts'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n  }\n\n  listReferenceImages(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listReferenceImages(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. Resource name of the product containing the reference images.\n   *\n   *   Format is\n   *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   A token identifying a page of results to be returned. This is the value\n   *   of `nextPageToken` returned in a previous reference image list request.\n   *\n   *   Defaults to the first page if not specified.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listReferenceImagesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n\n\n  listReferenceImagesStream(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listReferenceImages'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n  }\n  /**\n   * Equivalent to `listReferenceImages`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. Resource name of the product containing the reference images.\n   *\n   *   Format is\n   *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   A token identifying a page of results to be returned. This is the value\n   *   of `nextPageToken` returned in a previous reference image list request.\n   *\n   *   Defaults to the first page if not specified.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.list_reference_images.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_ListReferenceImages_async\n   */\n\n\n  listReferenceImagesAsync(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listReferenceImages'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n  }\n\n  listProductsInProductSet(request, optionsOrCallback, callback) {\n    var _a;\n\n    request = request || {};\n    let options;\n\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The ProductSet resource for which to retrieve Products.\n   *\n   *   Format is:\n   *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductsInProductSetAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n\n\n  listProductsInProductSetStream(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductsInProductSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The ProductSet resource for which to retrieve Products.\n   *\n   *   Format is:\n   *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/product_search.list_products_in_product_set.js</caption>\n   * region_tag:vision_v1_generated_ProductSearch_ListProductsInProductSet_async\n   */\n\n\n  listProductsInProductSetAsync(request, options) {\n    var _a;\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductsInProductSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n  } // --------------------\n  // -- Path templates --\n  // --------------------\n\n  /**\n   * Return a fully-qualified location resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n\n\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the project.\n   */\n\n\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\n   * Parse the location from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the location.\n   */\n\n\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\n   * Return a fully-qualified product resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @returns {string} Resource name string.\n   */\n\n\n  productPath(project, location, product) {\n    return this.pathTemplates.productPathTemplate.render({\n      project: project,\n      location: location,\n      product: product\n    });\n  }\n  /**\n   * Parse the project from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the project.\n   */\n\n\n  matchProjectFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).project;\n  }\n  /**\n   * Parse the location from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the location.\n   */\n\n\n  matchLocationFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).location;\n  }\n  /**\n   * Parse the product from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the product.\n   */\n\n\n  matchProductFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).product;\n  }\n  /**\n   * Return a fully-qualified productSet resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product_set\n   * @returns {string} Resource name string.\n   */\n\n\n  productSetPath(project, location, productSet) {\n    return this.pathTemplates.productSetPathTemplate.render({\n      project: project,\n      location: location,\n      product_set: productSet\n    });\n  }\n  /**\n   * Parse the project from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the project.\n   */\n\n\n  matchProjectFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).project;\n  }\n  /**\n   * Parse the location from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the location.\n   */\n\n\n  matchLocationFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).location;\n  }\n  /**\n   * Parse the product_set from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the product_set.\n   */\n\n\n  matchProductSetFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).product_set;\n  }\n  /**\n   * Return a fully-qualified referenceImage resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @param {string} reference_image\n   * @returns {string} Resource name string.\n   */\n\n\n  referenceImagePath(project, location, product, referenceImage) {\n    return this.pathTemplates.referenceImagePathTemplate.render({\n      project: project,\n      location: location,\n      product: product,\n      reference_image: referenceImage\n    });\n  }\n  /**\n   * Parse the project from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the project.\n   */\n\n\n  matchProjectFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n  }\n  /**\n   * Parse the location from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the location.\n   */\n\n\n  matchLocationFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n  }\n  /**\n   * Parse the product from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the product.\n   */\n\n\n  matchProductFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n  }\n  /**\n   * Parse the reference_image from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the reference_image.\n   */\n\n\n  matchReferenceImageFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n\n\n  close() {\n    if (this.productSearchStub && !this._terminated) {\n      return this.productSearchStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.operationsClient.close();\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n}\n\nexports.ProductSearchClient = ProductSearchClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProductSearchClient","jsonProtos","require","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","clientHeader","process","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","locationPathTemplate","PathTemplate","productPathTemplate","productSetPathTemplate","referenceImagePathTemplate","listProductSets","PageDescriptor","listProducts","listReferenceImages","listProductsInProductSet","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","undefined","protoJson","httpRules","selector","get","additional_bindings","operationsClient","lro","importProductSetsResponse","lookup","importProductSetsMetadata","purgeProductsResponse","purgeProductsMetadata","importProductSets","LongrunningDescriptor","decode","bind","purgeProducts","_defaults","constructSettings","join","innerApiCalls","warn","initialize","productSearchStub","createStub","lookupService","google","cloud","vision","v1","ProductSearch","productSearchStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","getProjectId","callback","createProductSet","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","parent","getProductSet","name","updateProductSet","productSet","deleteProductSet","createProduct","getProduct","updateProduct","product","deleteProduct","createReferenceImage","deleteReferenceImage","getReferenceImage","addProductToProductSet","removeProductFromProductSet","checkImportProductSetsProgress","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","checkPurgeProductsProgress","listProductSetsStream","defaultCallSettings","callSettings","merge","createStream","listProductSetsAsync","asyncIterate","listProductsStream","listProductsAsync","listReferenceImagesStream","listReferenceImagesAsync","listProductsInProductSetStream","listProductsInProductSetAsync","locationPath","project","location","render","matchProjectFromLocationName","locationName","match","matchLocationFromLocationName","productPath","matchProjectFromProductName","productName","matchLocationFromProductName","matchProductFromProductName","productSetPath","product_set","matchProjectFromProductSetName","productSetName","matchLocationFromProductSetName","matchProductSetFromProductSetName","referenceImagePath","referenceImage","reference_image","matchProjectFromReferenceImageName","referenceImageName","matchLocationFromReferenceImageName","matchProductFromReferenceImageName","matchReferenceImageFromReferenceImageName","close","resolve"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/@google-cloud/vision/build/src/v1/product_search_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1.Product|Product} has a collection of {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1\n */\nclass ProductSearchClient {\n    /**\n     * Construct an instance of ProductSearchClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ProductSearchClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};\n        const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = staticMembers.servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === staticMembers.servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process !== 'undefined' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n            listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n            listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n            listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1/{name=projects/*/operations/*}',\n                    additional_bindings: [\n                        { get: '/v1/{name=projects/*/locations/*/operations/*}' },\n                        { get: '/v1/{name=operations/*}' },\n                        { get: '/v1/{name=locations/*/operations/*}' },\n                    ],\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1.ImportProductSetsResponse');\n        const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n        const purgeProductsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n        const purgeProductsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n        this.descriptors.longrunning = {\n            importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n            purgeProducts: new this._gaxModule.LongrunningDescriptor(this.operationsClient, purgeProductsResponse.decode.bind(purgeProductsResponse), purgeProductsMetadata.decode.bind(purgeProductsMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1.ProductSearch', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.productSearchStub) {\n            return this.productSearchStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1.ProductSearch.\n        this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1.ProductSearch')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1.ProductSearch, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const productSearchStubMethods = [\n            'createProductSet',\n            'listProductSets',\n            'getProductSet',\n            'updateProductSet',\n            'deleteProductSet',\n            'createProduct',\n            'listProducts',\n            'getProduct',\n            'updateProduct',\n            'deleteProduct',\n            'createReferenceImage',\n            'deleteReferenceImage',\n            'listReferenceImages',\n            'getReferenceImage',\n            'addProductToProductSet',\n            'removeProductFromProductSet',\n            'listProductsInProductSet',\n            'importProductSets',\n            'purgeProducts',\n        ];\n        for (const methodName of productSearchStubMethods) {\n            const callPromise = this.productSearchStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.productSearchStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath(),\n     * exists for compatibility reasons.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProductSet(request, options, callback);\n    }\n    getProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProductSet(request, options, callback);\n    }\n    updateProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProductSet(request, options, callback);\n    }\n    deleteProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProductSet(request, options, callback);\n    }\n    createProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProduct(request, options, callback);\n    }\n    getProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProduct(request, options, callback);\n    }\n    updateProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProduct(request, options, callback);\n    }\n    deleteProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProduct(request, options, callback);\n    }\n    createReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createReferenceImage(request, options, callback);\n    }\n    deleteReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n    }\n    getReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getReferenceImage(request, options, callback);\n    }\n    addProductToProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.addProductToProductSet(request, options, callback);\n    }\n    removeProductFromProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n    }\n    importProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.importProductSets(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `importProductSets()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.import_product_sets.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ImportProductSets_async\n     */\n    async checkImportProductSetsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    purgeProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.purgeProducts(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `purgeProducts()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.purge_products.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_PurgeProducts_async\n     */\n    async checkPurgeProductsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.purgeProducts, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ProductSet|ProductSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_product_sets.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProductSets_async\n     */\n    listProductSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n    }\n    listProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProducts(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProducts`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_products.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProducts_async\n     */\n    listProductsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n    }\n    listReferenceImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listReferenceImages(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listReferenceImagesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listReferenceImagesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n    }\n    /**\n     * Equivalent to `listReferenceImages`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_reference_images.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListReferenceImages_async\n     */\n    listReferenceImagesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n    }\n    listProductsInProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsInProductSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsInProductSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_products_in_product_set.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProductsInProductSet_async\n     */\n    listProductsInProductSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.productSearchStub && !this._terminated) {\n            return this.productSearchStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ProductSearchClient = ProductSearchClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}