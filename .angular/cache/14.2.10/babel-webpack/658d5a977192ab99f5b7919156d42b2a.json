{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warn = void 0;\n\nconst featureDetection_1 = require(\"./featureDetection\");\n\nconst emittedWarnings = new Set(); // warnType is the type of warning (e.g. 'DeprecationWarning', 'ExperimentalWarning', etc.)\n\nfunction warn(code, message, warnType) {\n  // Only show a given warning once\n  if (emittedWarnings.has(code)) {\n    return;\n  }\n\n  emittedWarnings.add(code);\n\n  if (!(0, featureDetection_1.isNodeJS)()) {\n    console.warn(message);\n  } else if (typeof warnType !== 'undefined') {\n    process.emitWarning(message, {\n      type: warnType\n    });\n  } else {\n    process.emitWarning(message);\n  }\n}\n\nexports.warn = warn;","map":{"version":3,"names":["Object","defineProperty","exports","value","warn","featureDetection_1","require","emittedWarnings","Set","code","message","warnType","has","add","isNodeJS","console","process","emitWarning","type"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/warnings.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warn = void 0;\nconst featureDetection_1 = require(\"./featureDetection\");\nconst emittedWarnings = new Set();\n// warnType is the type of warning (e.g. 'DeprecationWarning', 'ExperimentalWarning', etc.)\nfunction warn(code, message, warnType) {\n    // Only show a given warning once\n    if (emittedWarnings.has(code)) {\n        return;\n    }\n    emittedWarnings.add(code);\n    if (!(0, featureDetection_1.isNodeJS)()) {\n        console.warn(message);\n    }\n    else if (typeof warnType !== 'undefined') {\n        process.emitWarning(message, {\n            type: warnType,\n        });\n    }\n    else {\n        process.emitWarning(message);\n    }\n}\nexports.warn = warn;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB,C,CACA;;AACA,SAASJ,IAAT,CAAcK,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC;EACnC;EACA,IAAIJ,eAAe,CAACK,GAAhB,CAAoBH,IAApB,CAAJ,EAA+B;IAC3B;EACH;;EACDF,eAAe,CAACM,GAAhB,CAAoBJ,IAApB;;EACA,IAAI,CAAC,CAAC,GAAGJ,kBAAkB,CAACS,QAAvB,GAAL,EAAyC;IACrCC,OAAO,CAACX,IAAR,CAAaM,OAAb;EACH,CAFD,MAGK,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;IACtCK,OAAO,CAACC,WAAR,CAAoBP,OAApB,EAA6B;MACzBQ,IAAI,EAAEP;IADmB,CAA7B;EAGH,CAJI,MAKA;IACDK,OAAO,CAACC,WAAR,CAAoBP,OAApB;EACH;AACJ;;AACDR,OAAO,CAACE,IAAR,GAAeA,IAAf"},"metadata":{},"sourceType":"script"}