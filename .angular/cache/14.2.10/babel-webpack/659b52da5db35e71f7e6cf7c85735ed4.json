{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongRunningDescriptor = void 0;\n\nconst longRunningApiCaller_1 = require(\"./longRunningApiCaller\");\n/**\n * A descriptor for long-running operations.\n */\n\n\nclass LongRunningDescriptor {\n  constructor(operationsClient, responseDecoder, metadataDecoder) {\n    this.operationsClient = operationsClient;\n    this.responseDecoder = responseDecoder;\n    this.metadataDecoder = metadataDecoder;\n  }\n\n  getApiCaller() {\n    return new longRunningApiCaller_1.LongrunningApiCaller(this);\n  }\n\n}\n\nexports.LongRunningDescriptor = LongRunningDescriptor;","map":{"version":3,"names":["Object","defineProperty","exports","value","LongRunningDescriptor","longRunningApiCaller_1","require","constructor","operationsClient","responseDecoder","metadataDecoder","getApiCaller","LongrunningApiCaller"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/longRunningCalls/longRunningDescriptor.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LongRunningDescriptor = void 0;\nconst longRunningApiCaller_1 = require(\"./longRunningApiCaller\");\n/**\n * A descriptor for long-running operations.\n */\nclass LongRunningDescriptor {\n    constructor(operationsClient, responseDecoder, metadataDecoder) {\n        this.operationsClient = operationsClient;\n        this.responseDecoder = responseDecoder;\n        this.metadataDecoder = metadataDecoder;\n    }\n    getApiCaller() {\n        return new longRunningApiCaller_1.LongrunningApiCaller(this);\n    }\n}\nexports.LongRunningDescriptor = LongRunningDescriptor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,wBAAD,CAAtC;AACA;AACA;AACA;;;AACA,MAAMF,qBAAN,CAA4B;EACxBG,WAAW,CAACC,gBAAD,EAAmBC,eAAnB,EAAoCC,eAApC,EAAqD;IAC5D,KAAKF,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAKC,eAAL,GAAuBA,eAAvB;EACH;;EACDC,YAAY,GAAG;IACX,OAAO,IAAIN,sBAAsB,CAACO,oBAA3B,CAAgD,IAAhD,CAAP;EACH;;AARuB;;AAU5BV,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC"},"metadata":{},"sourceType":"script"}