{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAPICaller = void 0;\n\nconst normalApiCaller_1 = require(\"./normalCalls/normalApiCaller\");\n\nfunction createAPICaller(settings, descriptor) {\n  if (!descriptor) {\n    return new normalApiCaller_1.NormalApiCaller();\n  }\n\n  return descriptor.getApiCaller(settings);\n}\n\nexports.createAPICaller = createAPICaller;","map":{"version":3,"names":["Object","defineProperty","exports","value","createAPICaller","normalApiCaller_1","require","settings","descriptor","NormalApiCaller","getApiCaller"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/apiCaller.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAPICaller = void 0;\nconst normalApiCaller_1 = require(\"./normalCalls/normalApiCaller\");\nfunction createAPICaller(settings, descriptor) {\n    if (!descriptor) {\n        return new normalApiCaller_1.NormalApiCaller();\n    }\n    return descriptor.getApiCaller(settings);\n}\nexports.createAPICaller = createAPICaller;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,+BAAD,CAAjC;;AACA,SAASF,eAAT,CAAyBG,QAAzB,EAAmCC,UAAnC,EAA+C;EAC3C,IAAI,CAACA,UAAL,EAAiB;IACb,OAAO,IAAIH,iBAAiB,CAACI,eAAtB,EAAP;EACH;;EACD,OAAOD,UAAU,CAACE,YAAX,CAAwBH,QAAxB,CAAP;AACH;;AACDL,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}