{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _asyncToGenerator = require(\"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdTokenClient = void 0;\n\nconst oauth2client_1 = require(\"./oauth2client\");\n\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n  /**\n   * Google ID Token client\n   *\n   * Retrieve access token from the metadata server.\n   * See: https://developers.google.com/compute/docs/authentication\n   */\n  constructor(options) {\n    super(options);\n    this.targetAudience = options.targetAudience;\n    this.idTokenProvider = options.idTokenProvider;\n  }\n\n  getRequestMetadataAsync( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.credentials.id_token || !_this.credentials.expiry_date || _this.isTokenExpiring()) {\n        const idToken = yield _this.idTokenProvider.fetchIdToken(_this.targetAudience);\n        _this.credentials = {\n          id_token: idToken,\n          expiry_date: _this.getIdTokenExpiryDate(idToken)\n        };\n      }\n\n      const headers = {\n        Authorization: 'Bearer ' + _this.credentials.id_token\n      };\n      return {\n        headers\n      };\n    })();\n  }\n\n  getIdTokenExpiryDate(idToken) {\n    const payloadB64 = idToken.split('.')[1];\n\n    if (payloadB64) {\n      const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n      return payload.exp * 1000;\n    }\n  }\n\n}\n\nexports.IdTokenClient = IdTokenClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","IdTokenClient","oauth2client_1","require","OAuth2Client","constructor","options","targetAudience","idTokenProvider","getRequestMetadataAsync","url","credentials","id_token","expiry_date","isTokenExpiring","idToken","fetchIdToken","getIdTokenExpiryDate","headers","Authorization","payloadB64","split","payload","JSON","parse","Buffer","from","toString","exp"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-auth-library/build/src/auth/idtokenclient.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdTokenClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n    /**\n     * Google ID Token client\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options) {\n        super(options);\n        this.targetAudience = options.targetAudience;\n        this.idTokenProvider = options.idTokenProvider;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        if (!this.credentials.id_token ||\n            !this.credentials.expiry_date ||\n            this.isTokenExpiring()) {\n            const idToken = await this.idTokenProvider.fetchIdToken(this.targetAudience);\n            this.credentials = {\n                id_token: idToken,\n                expiry_date: this.getIdTokenExpiryDate(idToken),\n            };\n        }\n        const headers = {\n            Authorization: 'Bearer ' + this.credentials.id_token,\n        };\n        return { headers };\n    }\n    getIdTokenExpiryDate(idToken) {\n        const payloadB64 = idToken.split('.')[1];\n        if (payloadB64) {\n            const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n            return payload.exp * 1000;\n        }\n    }\n}\nexports.IdTokenClient = IdTokenClient;\n"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMF,aAAN,SAA4BC,cAAc,CAACE,YAA3C,CAAwD;EACpD;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAMA,OAAN;IACA,KAAKC,cAAL,GAAsBD,OAAO,CAACC,cAA9B;IACA,KAAKC,eAAL,GAAuBF,OAAO,CAACE,eAA/B;EACH;;EACKC,uBAAuB,EAC7B;EACAC,GAF6B,EAExB;IAAA;;IAAA;MACD,IAAI,CAAC,KAAI,CAACC,WAAL,CAAiBC,QAAlB,IACA,CAAC,KAAI,CAACD,WAAL,CAAiBE,WADlB,IAEA,KAAI,CAACC,eAAL,EAFJ,EAE4B;QACxB,MAAMC,OAAO,SAAS,KAAI,CAACP,eAAL,CAAqBQ,YAArB,CAAkC,KAAI,CAACT,cAAvC,CAAtB;QACA,KAAI,CAACI,WAAL,GAAmB;UACfC,QAAQ,EAAEG,OADK;UAEfF,WAAW,EAAE,KAAI,CAACI,oBAAL,CAA0BF,OAA1B;QAFE,CAAnB;MAIH;;MACD,MAAMG,OAAO,GAAG;QACZC,aAAa,EAAE,YAAY,KAAI,CAACR,WAAL,CAAiBC;MADhC,CAAhB;MAGA,OAAO;QAAEM;MAAF,CAAP;IAbC;EAcJ;;EACDD,oBAAoB,CAACF,OAAD,EAAU;IAC1B,MAAMK,UAAU,GAAGL,OAAO,CAACM,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB;;IACA,IAAID,UAAJ,EAAgB;MACZ,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYN,UAAZ,EAAwB,QAAxB,EAAkCO,QAAlC,CAA2C,OAA3C,CAAX,CAAhB;MACA,OAAOL,OAAO,CAACM,GAAR,GAAc,IAArB;IACH;EACJ;;AAnCmD;;AAqCxD7B,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}