{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamArrayParser = void 0;\n\nconst abort_controller_1 = require(\"abort-controller\");\n\nconst stream_1 = require(\"stream\");\n\nconst fallbackRest_1 = require(\"./fallbackRest\");\n\nconst featureDetection_1 = require(\"./featureDetection\");\n\nclass StreamArrayParser extends stream_1.Transform {\n  /**\n   * StreamArrayParser processes array of valid JSON objects in random chunks\n   * through readable stream, and produces a stream of plain Javascript objects\n   * where it converted from the corresponding protobuf message instance.\n   *\n   * The default JSON parser decodes the input stream under the\n   * following rules:\n   *  1. The stream represents a valid JSON array (must start with a \"[\" and\n   * close with the corresponding \"]\"). Each element of this array is assumed to\n   * be either an array or an object, and will be decoded as a JS object and\n   *    delivered.\n   *  2. All JSON elements in the buffer will be decoded and delivered in a\n   * stream.\n   *\n   * @private\n   * @constructor\n   * @param {protobuf.Method} rpc - the protobuf method produce array of JSON.\n   * @param {Object} options - the options pass to Transform Stream. See more\n   * details\n   * https://nodejs.org/api/stream.html#stream_new_stream_transform_options.\n   */\n  constructor(rpc, options) {\n    super(Object.assign({}, options, {\n      readableObjectMode: true\n    }));\n    this._done = false;\n    this._prevBlock = Buffer.from('');\n    this._isInString = false;\n    this._isSkipped = false;\n    this._level = 0;\n    this.rpc = rpc;\n    this.cancelController = (0, featureDetection_1.hasAbortController)() ? new AbortController() : new abort_controller_1.AbortController();\n    this.cancelSignal = this.cancelController.signal;\n    this.cancelRequested = false;\n  }\n\n  _transform(chunk, _, callback) {\n    let objectStart = 0;\n    let curIndex = 0;\n\n    if (this._level === 0 && curIndex === 0) {\n      if (String.fromCharCode(chunk[0]) !== '[') {\n        this.emit('error', new Error(`Internal Error: API service stream data must start with a '[' and close with the corresponding ']', but it start with ${String.fromCharCode(chunk[0])}`));\n      }\n\n      curIndex++;\n      this._level++;\n    }\n\n    while (curIndex < chunk.length) {\n      const curValue = String.fromCharCode(chunk[curIndex]);\n\n      if (!this._isSkipped) {\n        switch (curValue) {\n          case '{':\n            // Check if it's in string, we ignore the curly brace in string.\n            // Otherwise the object level++.\n            if (!this._isInString) {\n              this._level++;\n            }\n\n            if (!this._isInString && this._level === 2) {\n              objectStart = curIndex;\n            }\n\n            break;\n\n          case '\"':\n            // Flip the string status\n            this._isInString = !this._isInString;\n            break;\n\n          case '}':\n            // check if it's in string\n            // if true, do nothing\n            // if false and level = 0, push data\n            if (!this._isInString) {\n              this._level--;\n            }\n\n            if (!this._isInString && this._level === 1) {\n              // find a object\n              const objBuff = Buffer.concat([this._prevBlock, chunk.slice(objectStart, curIndex + 1)]);\n\n              try {\n                // HTTP response.ok is true.\n                const msgObj = (0, fallbackRest_1.decodeResponse)(this.rpc, true, objBuff);\n                this.push(msgObj);\n              } catch (err) {\n                this.emit('error', err);\n              }\n\n              objectStart = curIndex + 1;\n              this._prevBlock = Buffer.from('');\n            }\n\n            break;\n\n          case ']':\n            if (!this._isInString && this._level === 1) {\n              this._done = true;\n              this.push(null);\n            }\n\n            break;\n\n          case '\\\\':\n            // Escaping escape character.\n            this._isSkipped = true;\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        this._isSkipped = false;\n      }\n\n      curIndex++;\n    }\n\n    if (this._level > 1) {\n      this._prevBlock = Buffer.concat([this._prevBlock, chunk.slice(objectStart, curIndex)]);\n    }\n\n    callback();\n  }\n\n  _flush(callback) {\n    callback();\n  }\n\n  cancel() {\n    this._done = true;\n    this.cancelRequested = true;\n    this.cancelController.abort();\n    this.end();\n  }\n\n}\n\nexports.StreamArrayParser = StreamArrayParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","StreamArrayParser","abort_controller_1","require","stream_1","fallbackRest_1","featureDetection_1","Transform","constructor","rpc","options","assign","readableObjectMode","_done","_prevBlock","Buffer","from","_isInString","_isSkipped","_level","cancelController","hasAbortController","AbortController","cancelSignal","signal","cancelRequested","_transform","chunk","_","callback","objectStart","curIndex","String","fromCharCode","emit","Error","length","curValue","objBuff","concat","slice","msgObj","decodeResponse","push","err","_flush","cancel","abort","end"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/google-gax/build/src/streamArrayParser.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamArrayParser = void 0;\nconst abort_controller_1 = require(\"abort-controller\");\nconst stream_1 = require(\"stream\");\nconst fallbackRest_1 = require(\"./fallbackRest\");\nconst featureDetection_1 = require(\"./featureDetection\");\nclass StreamArrayParser extends stream_1.Transform {\n    /**\n     * StreamArrayParser processes array of valid JSON objects in random chunks\n     * through readable stream, and produces a stream of plain Javascript objects\n     * where it converted from the corresponding protobuf message instance.\n     *\n     * The default JSON parser decodes the input stream under the\n     * following rules:\n     *  1. The stream represents a valid JSON array (must start with a \"[\" and\n     * close with the corresponding \"]\"). Each element of this array is assumed to\n     * be either an array or an object, and will be decoded as a JS object and\n     *    delivered.\n     *  2. All JSON elements in the buffer will be decoded and delivered in a\n     * stream.\n     *\n     * @private\n     * @constructor\n     * @param {protobuf.Method} rpc - the protobuf method produce array of JSON.\n     * @param {Object} options - the options pass to Transform Stream. See more\n     * details\n     * https://nodejs.org/api/stream.html#stream_new_stream_transform_options.\n     */\n    constructor(rpc, options) {\n        super(Object.assign({}, options, { readableObjectMode: true }));\n        this._done = false;\n        this._prevBlock = Buffer.from('');\n        this._isInString = false;\n        this._isSkipped = false;\n        this._level = 0;\n        this.rpc = rpc;\n        this.cancelController = (0, featureDetection_1.hasAbortController)()\n            ? new AbortController()\n            : new abort_controller_1.AbortController();\n        this.cancelSignal = this.cancelController.signal;\n        this.cancelRequested = false;\n    }\n    _transform(chunk, _, callback) {\n        let objectStart = 0;\n        let curIndex = 0;\n        if (this._level === 0 && curIndex === 0) {\n            if (String.fromCharCode(chunk[0]) !== '[') {\n                this.emit('error', new Error(`Internal Error: API service stream data must start with a '[' and close with the corresponding ']', but it start with ${String.fromCharCode(chunk[0])}`));\n            }\n            curIndex++;\n            this._level++;\n        }\n        while (curIndex < chunk.length) {\n            const curValue = String.fromCharCode(chunk[curIndex]);\n            if (!this._isSkipped) {\n                switch (curValue) {\n                    case '{':\n                        // Check if it's in string, we ignore the curly brace in string.\n                        // Otherwise the object level++.\n                        if (!this._isInString) {\n                            this._level++;\n                        }\n                        if (!this._isInString && this._level === 2) {\n                            objectStart = curIndex;\n                        }\n                        break;\n                    case '\"':\n                        // Flip the string status\n                        this._isInString = !this._isInString;\n                        break;\n                    case '}':\n                        // check if it's in string\n                        // if true, do nothing\n                        // if false and level = 0, push data\n                        if (!this._isInString) {\n                            this._level--;\n                        }\n                        if (!this._isInString && this._level === 1) {\n                            // find a object\n                            const objBuff = Buffer.concat([\n                                this._prevBlock,\n                                chunk.slice(objectStart, curIndex + 1),\n                            ]);\n                            try {\n                                // HTTP response.ok is true.\n                                const msgObj = (0, fallbackRest_1.decodeResponse)(this.rpc, true, objBuff);\n                                this.push(msgObj);\n                            }\n                            catch (err) {\n                                this.emit('error', err);\n                            }\n                            objectStart = curIndex + 1;\n                            this._prevBlock = Buffer.from('');\n                        }\n                        break;\n                    case ']':\n                        if (!this._isInString && this._level === 1) {\n                            this._done = true;\n                            this.push(null);\n                        }\n                        break;\n                    case '\\\\':\n                        // Escaping escape character.\n                        this._isSkipped = true;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            else {\n                this._isSkipped = false;\n            }\n            curIndex++;\n        }\n        if (this._level > 1) {\n            this._prevBlock = Buffer.concat([\n                this._prevBlock,\n                chunk.slice(objectStart, curIndex),\n            ]);\n        }\n        callback();\n    }\n    _flush(callback) {\n        callback();\n    }\n    cancel() {\n        this._done = true;\n        this.cancelRequested = true;\n        this.cancelController.abort();\n        this.end();\n    }\n}\nexports.StreamArrayParser = StreamArrayParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}