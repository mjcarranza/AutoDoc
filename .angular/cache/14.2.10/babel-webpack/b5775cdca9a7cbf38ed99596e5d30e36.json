{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleProtobufDurationFromProto3JSON = exports.googleProtobufDurationToProto3JSON = void 0;\n\nfunction googleProtobufDurationToProto3JSON(obj) {\n  // seconds is an instance of Long so it won't be undefined\n  let durationSeconds = obj.seconds.toString();\n\n  if (typeof obj.nanos === 'number' && obj.nanos > 0) {\n    // nanosStr should contain 3, 6, or 9 fractional digits.\n    const nanosStr = obj.nanos.toString().padStart(9, '0').replace(/^((?:\\d\\d\\d)+?)(?:0*)$/, '$1');\n    durationSeconds += '.' + nanosStr;\n  }\n\n  durationSeconds += 's';\n  return durationSeconds;\n}\n\nexports.googleProtobufDurationToProto3JSON = googleProtobufDurationToProto3JSON;\n\nfunction googleProtobufDurationFromProto3JSON(json) {\n  const match = json.match(/^(\\d*)(?:\\.(\\d*))?s$/);\n\n  if (!match) {\n    throw new Error(`googleProtobufDurationFromProto3JSON: incorrect value ${json} passed as google.protobuf.Duration`);\n  }\n\n  let seconds = 0;\n  let nanos = 0;\n\n  if (typeof match[1] === 'string' && match[1].length > 0) {\n    seconds = parseInt(match[1]);\n  }\n\n  if (typeof match[2] === 'string' && match[2].length > 0) {\n    nanos = parseInt(match[2].padEnd(9, '0'));\n  }\n\n  const result = {};\n\n  if (seconds !== 0) {\n    result.seconds = seconds;\n  }\n\n  if (nanos !== 0) {\n    result.nanos = nanos;\n  }\n\n  return result;\n}\n\nexports.googleProtobufDurationFromProto3JSON = googleProtobufDurationFromProto3JSON;","map":{"version":3,"names":["Object","defineProperty","exports","value","googleProtobufDurationFromProto3JSON","googleProtobufDurationToProto3JSON","obj","durationSeconds","seconds","toString","nanos","nanosStr","padStart","replace","json","match","Error","length","parseInt","padEnd","result"],"sources":["C:/Users/mario/Desktop/AutoDocIA/node_modules/proto3-json-serializer/build/src/duration.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleProtobufDurationFromProto3JSON = exports.googleProtobufDurationToProto3JSON = void 0;\nfunction googleProtobufDurationToProto3JSON(obj) {\n    // seconds is an instance of Long so it won't be undefined\n    let durationSeconds = obj.seconds.toString();\n    if (typeof obj.nanos === 'number' && obj.nanos > 0) {\n        // nanosStr should contain 3, 6, or 9 fractional digits.\n        const nanosStr = obj.nanos\n            .toString()\n            .padStart(9, '0')\n            .replace(/^((?:\\d\\d\\d)+?)(?:0*)$/, '$1');\n        durationSeconds += '.' + nanosStr;\n    }\n    durationSeconds += 's';\n    return durationSeconds;\n}\nexports.googleProtobufDurationToProto3JSON = googleProtobufDurationToProto3JSON;\nfunction googleProtobufDurationFromProto3JSON(json) {\n    const match = json.match(/^(\\d*)(?:\\.(\\d*))?s$/);\n    if (!match) {\n        throw new Error(`googleProtobufDurationFromProto3JSON: incorrect value ${json} passed as google.protobuf.Duration`);\n    }\n    let seconds = 0;\n    let nanos = 0;\n    if (typeof match[1] === 'string' && match[1].length > 0) {\n        seconds = parseInt(match[1]);\n    }\n    if (typeof match[2] === 'string' && match[2].length > 0) {\n        nanos = parseInt(match[2].padEnd(9, '0'));\n    }\n    const result = {};\n    if (seconds !== 0) {\n        result.seconds = seconds;\n    }\n    if (nanos !== 0) {\n        result.nanos = nanos;\n    }\n    return result;\n}\nexports.googleProtobufDurationFromProto3JSON = googleProtobufDurationFromProto3JSON;\n"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oCAAR,GAA+CF,OAAO,CAACG,kCAAR,GAA6C,KAAK,CAAjG;;AACA,SAASA,kCAAT,CAA4CC,GAA5C,EAAiD;EAC7C;EACA,IAAIC,eAAe,GAAGD,GAAG,CAACE,OAAJ,CAAYC,QAAZ,EAAtB;;EACA,IAAI,OAAOH,GAAG,CAACI,KAAX,KAAqB,QAArB,IAAiCJ,GAAG,CAACI,KAAJ,GAAY,CAAjD,EAAoD;IAChD;IACA,MAAMC,QAAQ,GAAGL,GAAG,CAACI,KAAJ,CACZD,QADY,GAEZG,QAFY,CAEH,CAFG,EAEA,GAFA,EAGZC,OAHY,CAGJ,wBAHI,EAGsB,IAHtB,CAAjB;IAIAN,eAAe,IAAI,MAAMI,QAAzB;EACH;;EACDJ,eAAe,IAAI,GAAnB;EACA,OAAOA,eAAP;AACH;;AACDL,OAAO,CAACG,kCAAR,GAA6CA,kCAA7C;;AACA,SAASD,oCAAT,CAA8CU,IAA9C,EAAoD;EAChD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAW,sBAAX,CAAd;;EACA,IAAI,CAACA,KAAL,EAAY;IACR,MAAM,IAAIC,KAAJ,CAAW,yDAAwDF,IAAK,qCAAxE,CAAN;EACH;;EACD,IAAIN,OAAO,GAAG,CAAd;EACA,IAAIE,KAAK,GAAG,CAAZ;;EACA,IAAI,OAAOK,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAApB,IAAgCA,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,GAAkB,CAAtD,EAAyD;IACrDT,OAAO,GAAGU,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAlB;EACH;;EACD,IAAI,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAApB,IAAgCA,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,GAAkB,CAAtD,EAAyD;IACrDP,KAAK,GAAGQ,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,CAAgB,CAAhB,EAAmB,GAAnB,CAAD,CAAhB;EACH;;EACD,MAAMC,MAAM,GAAG,EAAf;;EACA,IAAIZ,OAAO,KAAK,CAAhB,EAAmB;IACfY,MAAM,CAACZ,OAAP,GAAiBA,OAAjB;EACH;;EACD,IAAIE,KAAK,KAAK,CAAd,EAAiB;IACbU,MAAM,CAACV,KAAP,GAAeA,KAAf;EACH;;EACD,OAAOU,MAAP;AACH;;AACDlB,OAAO,CAACE,oCAAR,GAA+CA,oCAA/C"},"metadata":{},"sourceType":"script"}