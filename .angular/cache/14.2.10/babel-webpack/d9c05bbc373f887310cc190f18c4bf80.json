{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/mario/Desktop/AutoDocIA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Configuration, OpenAIApi } from 'openai';\nimport { environment } from 'src/environments/environment';\nimport { gptModels } from '../models/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class PersonalizationComponent {\n  constructor() {\n    this.chatConversation = [];\n    this.gptModels = gptModels;\n    this.promptText = '';\n    this.showSpinner = false;\n    this.selectedImage = '';\n  }\n\n  ngOnInit() {}\n\n  checkResponse() {\n    this.pushChatContent(this.promptText, 'You', 'person');\n    this.invokeGPT();\n  }\n\n  pushChatContent(content, person, cssClass) {\n    const chatToPush = {\n      person: person,\n      response: content,\n      cssClass: cssClass\n    };\n    this.chatConversation.push(chatToPush);\n  }\n\n  getText(data) {\n    return data.split('\\n').filter(f => f.length > 0);\n  }\n\n  invokeGPT() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.promptText.length < 2) return;\n\n      try {\n        _this.response = undefined;\n        let configuration = new Configuration({\n          apiKey: environment.apiKey\n        });\n        let openai = new OpenAIApi(configuration);\n        let requestData = {\n          model: 'text-davinci-003',\n          prompt: _this.promptText,\n          temperature: 0.95,\n          max_tokens: 150,\n          top_p: 1.0,\n          frequency_penalty: 0.0,\n          presence_penalty: 0.0\n        };\n        _this.showSpinner = true;\n        let apiResponse = yield openai.createCompletion(requestData);\n        _this.response = apiResponse.data;\n\n        _this.pushChatContent(_this.response.choices[0].text.trim(), 'Mr Bot', 'bot');\n\n        debugger;\n        _this.showSpinner = false;\n      } catch (error) {\n        _this.showSpinner = false; // Consider adjusting the error handling logic for your use case\n\n        if (error.response) {\n          console.error(error.response.status, error.response.data);\n        } else {\n          console.error(`Error with OpenAI API request: ${error.message}`);\n        }\n      }\n    })();\n  }\n\n  onFileSelected(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = evt => {\n        this.selectedImage = evt.target.result;\n      };\n    }\n  }\n\n}\n\nPersonalizationComponent.ɵfac = function PersonalizationComponent_Factory(t) {\n  return new (t || PersonalizationComponent)();\n};\n\nPersonalizationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PersonalizationComponent,\n  selectors: [[\"app-personalization\"]],\n  decls: 40,\n  vars: 2,\n  consts: [[\"href\", \"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\", \"rel\", \"stylesheet\"], [1, \"relative\", \"min-h-screen\", \"flex\", \"items-center\", \"justify-center\", \"bg-gray-50\", \"py-12\", \"px-4\", \"sm:px-6\", \"lg:px-8\", \"bg-gray-500\", \"bg-no-repeat\", \"bg-cover\", \"relative\", \"items-center\", 2, \"background-image\", \"url(https://images.unsplash.com/photo-1621243804936-775306a8f2e3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80)\"], [1, \"absolute\", \"bg-black\", \"opacity-60\", \"inset-0\", \"z-0\"], [1, \"sm:max-w-lg\", \"w-full\", \"p-10\", \"bg-white\", \"rounded-xl\", \"z-10\"], [1, \"text-center\"], [1, \"mt-5\", \"text-3xl\", \"font-bold\", \"text-gray-900\"], [1, \"mt-2\", \"text-sm\", \"text-gray-400\"], [\"action\", \"#\", \"method\", \"POST\", 1, \"mt-8\", \"space-y-3\"], [1, \"grid\", \"grid-cols-1\", \"space-y-2\"], [1, \"flex\", \"items-center\", \"justify-center\", \"w-full\"], [1, \"flex\", \"flex-col\", \"rounded-lg\", \"border-4\", \"border-dashed\", \"w-full\", \"h-60\", \"p-10\", \"group\", \"text-center\"], [1, \"h-full\", \"w-full\", \"text-center\", \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"items-center\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-10\", \"h-10\", \"text-blue-400\", \"group-hover:text-blue-600\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"], [\"height\", \"200\", 3, \"src\"], [1, \"flex\", \"flex-auto\", \"max-h-48\", \"w-2/5\", \"mx-auto\", \"-mt-10\"], [1, \"pointer-none\", \"text-gray-500\"], [1, \"text-sm\"], [\"type\", \"file\", 1, \"hidden\", 3, \"change\"], [1, \"text-sm\", \"text-gray-300\"], [1, \"form-group\"], [2, \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"25px\"], [\"rows\", \"3\", \"placeholder\", \"Escriba aqu\\u00ED el contexto para obtener una respuesta m\\u00E1s acertada...\", \"cols\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"my-5\", \"w-full\", \"flex\", \"justify-center\", \"bg-blue-500\", \"text-gray-100\", \"p-4\", \"rounded-full\", \"tracking-wide\", \"font-semibold\", \"focus:outline-none\", \"focus:shadow-outline\", \"hover:bg-blue-600\", \"shadow-lg\", \"cursor-pointer\", \"transition\", \"ease-in\", \"duration-300\"]],\n  template: function PersonalizationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n      i0.ɵɵtext(6, \" Personalizaci\\u00F3n de ve \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"h2\", 5);\n      i0.ɵɵtext(9, \" Selecci\\u00F3n de imagen! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\", 6);\n      i0.ɵɵtext(11, \"Seleccione una imagen para analizar y obtener la soluci\\u00F3n al problema que representa.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"form\", 7)(13, \"div\", 8)(14, \"div\", 9)(15, \"label\", 10)(16, \"div\", 11);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(17, \"svg\", 12);\n      i0.ɵɵelement(18, \"path\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(19, \"img\", 14)(20, \"div\", 15);\n      i0.ɵɵelementStart(21, \"p\", 16)(22, \"span\", 17);\n      i0.ɵɵtext(23, \"Arrasta una imagen aqu\\u00ED\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵtext(25, \" o \");\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵtext(27, \"seleccione una desde su computadora.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"input\", 18);\n      i0.ɵɵlistener(\"change\", function PersonalizationComponent_Template_input_change_28_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(29, \"p\", 19)(30, \"span\");\n      i0.ɵɵtext(31, \"Tipo de arcivo soportado: Im\\u00E1genes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 20)(33, \"h3\", 21);\n      i0.ɵɵtext(34, \"Contexto de imagen:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"hr\");\n      i0.ɵɵelementStart(36, \"textarea\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function PersonalizationComponent_Template_textarea_ngModelChange_36_listener($event) {\n        return ctx.promptText = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\")(38, \"button\", 23);\n      i0.ɵɵtext(39, \" Analizar Imagen \");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"src\", ctx.selectedImage, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngModel\", ctx.promptText);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  styles: [\".push-right[_ngcontent-%COMP%] {\\r\\n    margin-left: 90%;\\r\\n}\\r\\n\\r\\n.person[_ngcontent-%COMP%] {\\r\\n    font-style: italic;\\r\\n    font-weight: bold;\\r\\n    color: purple;\\r\\n}\\r\\n\\r\\n.bot[_ngcontent-%COMP%] {    \\r\\n    font-weight: bold; \\r\\n    color: darkgreen;\\r\\n}\\r\\n\\r\\n.frame-box[_ngcontent-%COMP%]{\\r\\n    border: dotted 2px orange; padding: 20px;\\r\\n    min-height: 400px;\\r\\n    max-height: 400px;\\r\\n    overflow-y: scroll\\r\\n}\\r\\n\\r\\n.padding[_ngcontent-%COMP%]{\\r\\n    padding: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmFsaXphdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QixFQUFFLGFBQWE7SUFDeEMsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQjtBQUNKOztBQUdBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJwZXJzb25hbGl6YXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wdXNoLXJpZ2h0IHtcclxuICAgIG1hcmdpbi1sZWZ0OiA5MCU7XHJcbn1cclxuXHJcbi5wZXJzb24ge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogcHVycGxlO1xyXG59XHJcblxyXG4uYm90IHsgICAgXHJcbiAgICBmb250LXdlaWdodDogYm9sZDsgXHJcbiAgICBjb2xvcjogZGFya2dyZWVuO1xyXG59XHJcblxyXG4uZnJhbWUtYm94e1xyXG4gICAgYm9yZGVyOiBkb3R0ZWQgMnB4IG9yYW5nZTsgcGFkZGluZzogMjBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGxcclxufVxyXG5cclxuXHJcbi5wYWRkaW5ne1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59Il19 */\"]\n});","map":{"version":3,"mappings":"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","names":["Configuration","OpenAIApi","environment","gptModels","PersonalizationComponent","constructor","ngOnInit","checkResponse","pushChatContent","promptText","invokeGPT","content","person","cssClass","chatToPush","response","chatConversation","push","getText","data","split","filter","f","length","undefined","configuration","apiKey","openai","requestData","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","showSpinner","apiResponse","createCompletion","choices","text","trim","error","console","status","message","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","evt","selectedImage","result","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\mario\\Desktop\\AutoDocIA\\src\\app\\personalization\\personalization.component.ts","C:\\Users\\mario\\Desktop\\AutoDocIA\\src\\app\\personalization\\personalization.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { environment } from 'src/environments/environment';\nimport { gptModels } from '../models/constants';\nimport { ChatWithBot, ResponseModel } from '../models/gpt-response';\n\n@Component({\n  selector: 'app-personalization',\n  templateUrl: './personalization.component.html',\n  styleUrls: ['./personalization.component.css']\n})\nexport class PersonalizationComponent implements OnInit {\n  chatConversation: ChatWithBot[]=[];\n  response!: ResponseModel | undefined;\n      gptModels = gptModels\n      promptText = '';\n      showSpinner = false;\n  \n    constructor() { }\n  \n    ngOnInit(): void {\n    }\n  \n    checkResponse() {\n      this.pushChatContent(this.promptText,'You','person');\n      this.invokeGPT();\n    }\n  \n  \n    pushChatContent(content:string, person:string, cssClass:string) {\n      const chatToPush: ChatWithBot = { person:person, response:content, cssClass:cssClass};\n      this.chatConversation.push(chatToPush);\n    }\n  \n  \n    getText(data:string) {\n      return data.split('\\n').filter(f=>f.length>0);\n    }\n  \n    async invokeGPT() {\n     \n  \n      if(this.promptText.length<2)\n      return;\n  \n      \n  \n      try{\n        this.response = undefined;\n        let configuration = new Configuration({apiKey: environment.apiKey});\n        let openai = new OpenAIApi(configuration);\n  \n        let requestData={\n          model: 'text-davinci-003',//'text-davinci-003',//\"text-curie-001\",\n          prompt: this.promptText,//this.generatePrompt(animal),\n          temperature: 0.95,\n          max_tokens: 150,\n          top_p: 1.0,\n          frequency_penalty: 0.0,\n          presence_penalty: 0.0,\n        };\n        this.showSpinner = true;\n        let apiResponse =  await openai.createCompletion(requestData);\n  \n        this.response = apiResponse.data as ResponseModel;\n        this.pushChatContent(this.response.choices[0].text.trim(),'Mr Bot','bot');\n  debugger;\n        this.showSpinner = false;\n      }catch(error:any) {\n        this.showSpinner = false;\n        // Consider adjusting the error handling logic for your use case\n        if (error.response) {\n          console.error(error.response.status, error.response.data);\n          \n        } else {\n          console.error(`Error with OpenAI API request: ${error.message}`);\n          \n        }\n      }\n    }\n  \n    selectedImage: string = '';\n\n    onFileSelected(event: any) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (evt:any) =>{\n          this.selectedImage = evt.target.result as string;\n        }\n      }\n    }\n}\n","<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\">\n<div class=\"relative min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8 bg-gray-500 bg-no-repeat bg-cover relative items-center\"\n\tstyle=\"background-image: url(https://images.unsplash.com/photo-1621243804936-775306a8f2e3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80);\">\n\t<div class=\"absolute bg-black opacity-60 inset-0 z-0\"></div>\n\t<div class=\"sm:max-w-lg w-full p-10 bg-white rounded-xl z-10\">\n\t\t<div class=\"text-center\">\n\t\t\t<h2 class=\"mt-5 text-3xl font-bold text-gray-900\">\n\t\t\t\tPersonalización de ve\n\t\t\t</h2>\n\t\t</div>\n        <div class=\"text-center\">\n\t\t\t<h2 class=\"mt-5 text-3xl font-bold text-gray-900\">\n\t\t\t\tSelección de imagen!\n\t\t\t</h2>\n\t\t\t<p class=\"mt-2 text-sm text-gray-400\">Seleccione una imagen para analizar y obtener la solución al problema que representa.</p>\n\t\t</div>\n        <form class=\"mt-8 space-y-3\" action=\"#\" method=\"POST\">\n                    <div class=\"grid grid-cols-1 space-y-2\">\n                        <div class=\"flex items-center justify-center w-full\">\n                            <label class=\"flex flex-col rounded-lg border-4 border-dashed w-full h-60 p-10 group text-center\">\n                                <div class=\"h-full w-full text-center flex flex-col items-center justify-center items-center  \">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-10 h-10 text-blue-400 group-hover:text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                                    </svg>\n                                    <img [src]=\"selectedImage\" height=\"200\">\n                                    <div class=\"flex flex-auto max-h-48 w-2/5 mx-auto -mt-10\">\n                                    </div>\n                                    <p class=\"pointer-none text-gray-500 \"><span class=\"text-sm\">Arrasta una imagen aquí</span> <br> o <br />seleccione una desde su computadora.</p>\n                                </div>\n                                <input type=\"file\" class=\"hidden\" (change)=\"onFileSelected($event)\">\n                            </label>\n                        </div>\n                    </div>\n                            <p class=\"text-sm text-gray-300\">\n                                <span>Tipo de arcivo soportado: Imágenes</span>\n                            </p>\n                            <div class=\"form-group\"> \n                                <h3 style=\"font-family: 'Times New Roman', Times, serif; font-size: 25px;\">Contexto de imagen:</h3><hr>\n                                <!-- <label for=\"name\">Prompt</label> -->\n                                <textarea rows=\"3\" placeholder=\"Escriba aquí el contexto para obtener una respuesta más acertada...\" class=\"form-control\" cols=\"6\" [(ngModel)]=\"promptText\"></textarea>\n                            </div>\n                    <div>\n                        <button type=\"submit\" class=\"my-5 w-full flex justify-center bg-blue-500 text-gray-100 p-4  rounded-full tracking-wide\n                                    font-semibold  focus:outline-none focus:shadow-outline hover:bg-blue-600 shadow-lg cursor-pointer transition ease-in duration-300\">\n                        Analizar Imagen\n                    </button>\n                    </div>\n        </form>\n\t</div>\n</div>\n\n"]},"metadata":{},"sourceType":"module"}